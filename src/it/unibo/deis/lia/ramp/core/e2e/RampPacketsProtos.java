// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ramppackets.proto

package it.unibo.deis.lia.ramp.core.e2e;

public final class RampPacketsProtos {
  private RampPacketsProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HeartbeatRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeartbeatRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 nodeId = 1;</code>
     * @return Whether the nodeId field is set.
     */
    boolean hasNodeId();
    /**
     * <code>required int32 nodeId = 1;</code>
     * @return The nodeId.
     */
    int getNodeId();
  }
  /**
   * <pre>
   * packet id 4
   * </pre>
   *
   * Protobuf type {@code HeartbeatRequest}
   */
  public  static final class HeartbeatRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HeartbeatRequest)
      HeartbeatRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeartbeatRequest.newBuilder() to construct.
    private HeartbeatRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeartbeatRequest() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new HeartbeatRequest();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeartbeatRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              nodeId_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_HeartbeatRequest_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_HeartbeatRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HeartbeatRequest.class, Builder.class);
    }

    private int bitField0_;
    public static final int NODEID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>required int32 nodeId = 1;</code>
     * @return Whether the nodeId field is set.
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 nodeId = 1;</code>
     * @return The nodeId.
     */
    public int getNodeId() {
      return nodeId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, nodeId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HeartbeatRequest)) {
        return super.equals(obj);
      }
      HeartbeatRequest other = (HeartbeatRequest) obj;

      if (hasNodeId() != other.hasNodeId()) return false;
      if (hasNodeId()) {
        if (getNodeId()
            != other.getNodeId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNodeId()) {
        hash = (37 * hash) + NODEID_FIELD_NUMBER;
        hash = (53 * hash) + getNodeId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HeartbeatRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartbeatRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartbeatRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HeartbeatRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartbeatRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartbeatRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HeartbeatRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 4
     * </pre>
     *
     * Protobuf type {@code HeartbeatRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HeartbeatRequest)
        HeartbeatRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_HeartbeatRequest_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_HeartbeatRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeartbeatRequest.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.HeartbeatRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        nodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_HeartbeatRequest_descriptor;
      }

      @Override
      public HeartbeatRequest getDefaultInstanceForType() {
        return HeartbeatRequest.getDefaultInstance();
      }

      @Override
      public HeartbeatRequest build() {
        HeartbeatRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public HeartbeatRequest buildPartial() {
        HeartbeatRequest result = new HeartbeatRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.nodeId_ = nodeId_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HeartbeatRequest) {
          return mergeFrom((HeartbeatRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HeartbeatRequest other) {
        if (other == HeartbeatRequest.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          setNodeId(other.getNodeId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasNodeId()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HeartbeatRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HeartbeatRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int nodeId_ ;
      /**
       * <code>required int32 nodeId = 1;</code>
       * @return Whether the nodeId field is set.
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 nodeId = 1;</code>
       * @return The nodeId.
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>required int32 nodeId = 1;</code>
       * @param value The nodeId to set.
       * @return This builder for chaining.
       */
      public Builder setNodeId(int value) {
        bitField0_ |= 0x00000001;
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nodeId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:HeartbeatRequest)
    }

    // @@protoc_insertion_point(class_scope:HeartbeatRequest)
    private static final HeartbeatRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeartbeatRequest();
    }

    public static HeartbeatRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<HeartbeatRequest>
        PARSER = new com.google.protobuf.AbstractParser<HeartbeatRequest>() {
      @Override
      public HeartbeatRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartbeatRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HeartbeatRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HeartbeatRequest> getParserForType() {
      return PARSER;
    }

    @Override
    public HeartbeatRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeartbeatResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:HeartbeatResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 nodeId = 1;</code>
     * @return Whether the nodeId field is set.
     */
    boolean hasNodeId();
    /**
     * <code>required int32 nodeId = 1;</code>
     * @return The nodeId.
     */
    int getNodeId();
  }
  /**
   * <pre>
   * packet id 5
   * </pre>
   *
   * Protobuf type {@code HeartbeatResponse}
   */
  public  static final class HeartbeatResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:HeartbeatResponse)
      HeartbeatResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeartbeatResponse.newBuilder() to construct.
    private HeartbeatResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeartbeatResponse() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new HeartbeatResponse();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeartbeatResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              nodeId_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_HeartbeatResponse_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_HeartbeatResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HeartbeatResponse.class, Builder.class);
    }

    private int bitField0_;
    public static final int NODEID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>required int32 nodeId = 1;</code>
     * @return Whether the nodeId field is set.
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 nodeId = 1;</code>
     * @return The nodeId.
     */
    public int getNodeId() {
      return nodeId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, nodeId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HeartbeatResponse)) {
        return super.equals(obj);
      }
      HeartbeatResponse other = (HeartbeatResponse) obj;

      if (hasNodeId() != other.hasNodeId()) return false;
      if (hasNodeId()) {
        if (getNodeId()
            != other.getNodeId()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNodeId()) {
        hash = (37 * hash) + NODEID_FIELD_NUMBER;
        hash = (53 * hash) + getNodeId();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HeartbeatResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartbeatResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartbeatResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartbeatResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartbeatResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HeartbeatResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartbeatResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartbeatResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HeartbeatResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 5
     * </pre>
     *
     * Protobuf type {@code HeartbeatResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:HeartbeatResponse)
        HeartbeatResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_HeartbeatResponse_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_HeartbeatResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeartbeatResponse.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.HeartbeatResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        nodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_HeartbeatResponse_descriptor;
      }

      @Override
      public HeartbeatResponse getDefaultInstanceForType() {
        return HeartbeatResponse.getDefaultInstance();
      }

      @Override
      public HeartbeatResponse build() {
        HeartbeatResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public HeartbeatResponse buildPartial() {
        HeartbeatResponse result = new HeartbeatResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.nodeId_ = nodeId_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HeartbeatResponse) {
          return mergeFrom((HeartbeatResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HeartbeatResponse other) {
        if (other == HeartbeatResponse.getDefaultInstance()) return this;
        if (other.hasNodeId()) {
          setNodeId(other.getNodeId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasNodeId()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HeartbeatResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HeartbeatResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int nodeId_ ;
      /**
       * <code>required int32 nodeId = 1;</code>
       * @return Whether the nodeId field is set.
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 nodeId = 1;</code>
       * @return The nodeId.
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>required int32 nodeId = 1;</code>
       * @param value The nodeId to set.
       * @return This builder for chaining.
       */
      public Builder setNodeId(int value) {
        bitField0_ |= 0x00000001;
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nodeId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:HeartbeatResponse)
    }

    // @@protoc_insertion_point(class_scope:HeartbeatResponse)
    private static final HeartbeatResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeartbeatResponse();
    }

    public static HeartbeatResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<HeartbeatResponse>
        PARSER = new com.google.protobuf.AbstractParser<HeartbeatResponse>() {
      @Override
      public HeartbeatResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartbeatResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HeartbeatResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HeartbeatResponse> getParserForType() {
      return PARSER;
    }

    @Override
    public HeartbeatResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnicastHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UnicastHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>repeated int32 dest = 2;</code>
     * @return A list containing the dest.
     */
    java.util.List<Integer> getDestList();
    /**
     * <code>repeated int32 dest = 2;</code>
     * @return The count of dest.
     */
    int getDestCount();
    /**
     * <code>repeated int32 dest = 2;</code>
     * @param index The index of the element to return.
     * @return The dest at the given index.
     */
    int getDest(int index);

    /**
     * <code>repeated int32 source = 3;</code>
     * @return A list containing the source.
     */
    java.util.List<Integer> getSourceList();
    /**
     * <code>repeated int32 source = 3;</code>
     * @return The count of source.
     */
    int getSourceCount();
    /**
     * <code>repeated int32 source = 3;</code>
     * @param index The index of the element to return.
     * @return The source at the given index.
     */
    int getSource(int index);

    /**
     * <code>required int32 destPort = 4;</code>
     * @return Whether the destPort field is set.
     */
    boolean hasDestPort();
    /**
     * <code>required int32 destPort = 4;</code>
     * @return The destPort.
     */
    int getDestPort();

    /**
     * <code>optional int32 destNodeId = 5 [default = 0];</code>
     * @return Whether the destNodeId field is set.
     */
    boolean hasDestNodeId();
    /**
     * <code>optional int32 destNodeId = 5 [default = 0];</code>
     * @return The destNodeId.
     */
    int getDestNodeId();

    /**
     * <code>optional int32 sourceNodeId = 6 [default = 0];</code>
     * @return Whether the sourceNodeId field is set.
     */
    boolean hasSourceNodeId();
    /**
     * <code>optional int32 sourceNodeId = 6 [default = 0];</code>
     * @return The sourceNodeId.
     */
    int getSourceNodeId();

    /**
     * <code>required bool ack = 7;</code>
     * @return Whether the ack field is set.
     */
    boolean hasAck();
    /**
     * <code>required bool ack = 7;</code>
     * @return The ack.
     */
    boolean getAck();

    /**
     * <code>optional int32 sourcePortAck = 8;</code>
     * @return Whether the sourcePortAck field is set.
     */
    boolean hasSourcePortAck();
    /**
     * <code>optional int32 sourcePortAck = 8;</code>
     * @return The sourcePortAck.
     */
    int getSourcePortAck();

    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 currentHop = 9;</code>
     * @return Whether the currentHop field is set.
     */
    boolean hasCurrentHop();
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 currentHop = 9;</code>
     * @return The currentHop.
     */
    int getCurrentHop();

    /**
     * <pre>
     * [default = 51250];
     * </pre>
     *
     * <code>required int32 bufferSize = 10;</code>
     * @return Whether the bufferSize field is set.
     */
    boolean hasBufferSize();
    /**
     * <pre>
     * [default = 51250];
     * </pre>
     *
     * <code>required int32 bufferSize = 10;</code>
     * @return The bufferSize.
     */
    int getBufferSize();

    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 retry = 11;</code>
     * @return Whether the retry field is set.
     */
    boolean hasRetry();
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 retry = 11;</code>
     * @return The retry.
     */
    int getRetry();

    /**
     * <code>optional int32 timeWait = 12;</code>
     * @return Whether the timeWait field is set.
     */
    boolean hasTimeWait();
    /**
     * <code>optional int32 timeWait = 12;</code>
     * @return The timeWait.
     */
    int getTimeWait();

    /**
     * <code>optional int32 expiry = 13;</code>
     * @return Whether the expiry field is set.
     */
    boolean hasExpiry();
    /**
     * <code>optional int32 expiry = 13;</code>
     * @return The expiry.
     */
    int getExpiry();

    /**
     * <pre>
     * [default = 500];
     * </pre>
     *
     * <code>required int32 connectTimeout = 14;</code>
     * @return Whether the connectTimeout field is set.
     */
    boolean hasConnectTimeout();
    /**
     * <pre>
     * [default = 500];
     * </pre>
     *
     * <code>required int32 connectTimeout = 14;</code>
     * @return The connectTimeout.
     */
    int getConnectTimeout();

    /**
     * <pre>
     * Alessandro Dolci
     * </pre>
     *
     * <code>optional int32 flowId = 15;</code>
     * @return Whether the flowId field is set.
     */
    boolean hasFlowId();
    /**
     * <pre>
     * Alessandro Dolci
     * </pre>
     *
     * <code>optional int32 flowId = 15;</code>
     * @return The flowId.
     */
    int getFlowId();

    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 16;</code>
     * @return Whether the dataType field is set.
     */
    boolean hasDataType();
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 16;</code>
     * @return The dataType.
     */
    long getDataType();
  }
  /**
   * <pre>
   * packet id 1
   * </pre>
   *
   * Protobuf type {@code UnicastHeader}
   */
  public  static final class UnicastHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UnicastHeader)
      UnicastHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnicastHeader.newBuilder() to construct.
    private UnicastHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnicastHeader() {
      dest_ = emptyIntList();
      source_ = emptyIntList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new UnicastHeader();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnicastHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                dest_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              dest_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                dest_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                dest_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                source_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              source_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                source_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                source_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              destPort_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              destNodeId_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              sourceNodeId_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              ack_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              sourcePortAck_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              currentHop_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              bufferSize_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              retry_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              timeWait_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              expiry_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              connectTimeout_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              flowId_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              dataType_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          dest_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          source_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_UnicastHeader_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_UnicastHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UnicastHeader.class, Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 id = 1;</code>
     * @return The id.
     */
    public int getId() {
      return id_;
    }

    public static final int DEST_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList dest_;
    /**
     * <code>repeated int32 dest = 2;</code>
     * @return A list containing the dest.
     */
    public java.util.List<Integer>
        getDestList() {
      return dest_;
    }
    /**
     * <code>repeated int32 dest = 2;</code>
     * @return The count of dest.
     */
    public int getDestCount() {
      return dest_.size();
    }
    /**
     * <code>repeated int32 dest = 2;</code>
     * @param index The index of the element to return.
     * @return The dest at the given index.
     */
    public int getDest(int index) {
      return dest_.getInt(index);
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList source_;
    /**
     * <code>repeated int32 source = 3;</code>
     * @return A list containing the source.
     */
    public java.util.List<Integer>
        getSourceList() {
      return source_;
    }
    /**
     * <code>repeated int32 source = 3;</code>
     * @return The count of source.
     */
    public int getSourceCount() {
      return source_.size();
    }
    /**
     * <code>repeated int32 source = 3;</code>
     * @param index The index of the element to return.
     * @return The source at the given index.
     */
    public int getSource(int index) {
      return source_.getInt(index);
    }

    public static final int DESTPORT_FIELD_NUMBER = 4;
    private int destPort_;
    /**
     * <code>required int32 destPort = 4;</code>
     * @return Whether the destPort field is set.
     */
    public boolean hasDestPort() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 destPort = 4;</code>
     * @return The destPort.
     */
    public int getDestPort() {
      return destPort_;
    }

    public static final int DESTNODEID_FIELD_NUMBER = 5;
    private int destNodeId_;
    /**
     * <code>optional int32 destNodeId = 5 [default = 0];</code>
     * @return Whether the destNodeId field is set.
     */
    public boolean hasDestNodeId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 destNodeId = 5 [default = 0];</code>
     * @return The destNodeId.
     */
    public int getDestNodeId() {
      return destNodeId_;
    }

    public static final int SOURCENODEID_FIELD_NUMBER = 6;
    private int sourceNodeId_;
    /**
     * <code>optional int32 sourceNodeId = 6 [default = 0];</code>
     * @return Whether the sourceNodeId field is set.
     */
    public boolean hasSourceNodeId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 sourceNodeId = 6 [default = 0];</code>
     * @return The sourceNodeId.
     */
    public int getSourceNodeId() {
      return sourceNodeId_;
    }

    public static final int ACK_FIELD_NUMBER = 7;
    private boolean ack_;
    /**
     * <code>required bool ack = 7;</code>
     * @return Whether the ack field is set.
     */
    public boolean hasAck() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>required bool ack = 7;</code>
     * @return The ack.
     */
    public boolean getAck() {
      return ack_;
    }

    public static final int SOURCEPORTACK_FIELD_NUMBER = 8;
    private int sourcePortAck_;
    /**
     * <code>optional int32 sourcePortAck = 8;</code>
     * @return Whether the sourcePortAck field is set.
     */
    public boolean hasSourcePortAck() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 sourcePortAck = 8;</code>
     * @return The sourcePortAck.
     */
    public int getSourcePortAck() {
      return sourcePortAck_;
    }

    public static final int CURRENTHOP_FIELD_NUMBER = 9;
    private int currentHop_;
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 currentHop = 9;</code>
     * @return Whether the currentHop field is set.
     */
    public boolean hasCurrentHop() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 currentHop = 9;</code>
     * @return The currentHop.
     */
    public int getCurrentHop() {
      return currentHop_;
    }

    public static final int BUFFERSIZE_FIELD_NUMBER = 10;
    private int bufferSize_;
    /**
     * <pre>
     * [default = 51250];
     * </pre>
     *
     * <code>required int32 bufferSize = 10;</code>
     * @return Whether the bufferSize field is set.
     */
    public boolean hasBufferSize() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * [default = 51250];
     * </pre>
     *
     * <code>required int32 bufferSize = 10;</code>
     * @return The bufferSize.
     */
    public int getBufferSize() {
      return bufferSize_;
    }

    public static final int RETRY_FIELD_NUMBER = 11;
    private int retry_;
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 retry = 11;</code>
     * @return Whether the retry field is set.
     */
    public boolean hasRetry() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 retry = 11;</code>
     * @return The retry.
     */
    public int getRetry() {
      return retry_;
    }

    public static final int TIMEWAIT_FIELD_NUMBER = 12;
    private int timeWait_;
    /**
     * <code>optional int32 timeWait = 12;</code>
     * @return Whether the timeWait field is set.
     */
    public boolean hasTimeWait() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional int32 timeWait = 12;</code>
     * @return The timeWait.
     */
    public int getTimeWait() {
      return timeWait_;
    }

    public static final int EXPIRY_FIELD_NUMBER = 13;
    private int expiry_;
    /**
     * <code>optional int32 expiry = 13;</code>
     * @return Whether the expiry field is set.
     */
    public boolean hasExpiry() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional int32 expiry = 13;</code>
     * @return The expiry.
     */
    public int getExpiry() {
      return expiry_;
    }

    public static final int CONNECTTIMEOUT_FIELD_NUMBER = 14;
    private int connectTimeout_;
    /**
     * <pre>
     * [default = 500];
     * </pre>
     *
     * <code>required int32 connectTimeout = 14;</code>
     * @return Whether the connectTimeout field is set.
     */
    public boolean hasConnectTimeout() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * [default = 500];
     * </pre>
     *
     * <code>required int32 connectTimeout = 14;</code>
     * @return The connectTimeout.
     */
    public int getConnectTimeout() {
      return connectTimeout_;
    }

    public static final int FLOWID_FIELD_NUMBER = 15;
    private int flowId_;
    /**
     * <pre>
     * Alessandro Dolci
     * </pre>
     *
     * <code>optional int32 flowId = 15;</code>
     * @return Whether the flowId field is set.
     */
    public boolean hasFlowId() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Alessandro Dolci
     * </pre>
     *
     * <code>optional int32 flowId = 15;</code>
     * @return The flowId.
     */
    public int getFlowId() {
      return flowId_;
    }

    public static final int DATATYPE_FIELD_NUMBER = 16;
    private long dataType_;
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 16;</code>
     * @return Whether the dataType field is set.
     */
    public boolean hasDataType() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 16;</code>
     * @return The dataType.
     */
    public long getDataType() {
      return dataType_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDestPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAck()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentHop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBufferSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRetry()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConnectTimeout()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < dest_.size(); i++) {
        output.writeInt32(2, dest_.getInt(i));
      }
      for (int i = 0; i < source_.size(); i++) {
        output.writeInt32(3, source_.getInt(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(4, destPort_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(5, destNodeId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(6, sourceNodeId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(7, ack_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(8, sourcePortAck_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(9, currentHop_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(10, bufferSize_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(11, retry_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(12, timeWait_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(13, expiry_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(14, connectTimeout_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeInt32(15, flowId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt64(16, dataType_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dest_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dest_.getInt(i));
        }
        size += dataSize;
        size += 1 * getDestList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < source_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(source_.getInt(i));
        }
        size += dataSize;
        size += 1 * getSourceList().size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, destPort_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, destNodeId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, sourceNodeId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, ack_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, sourcePortAck_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, currentHop_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, bufferSize_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, retry_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, timeWait_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, expiry_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, connectTimeout_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, flowId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, dataType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UnicastHeader)) {
        return super.equals(obj);
      }
      UnicastHeader other = (UnicastHeader) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (!getDestList()
          .equals(other.getDestList())) return false;
      if (!getSourceList()
          .equals(other.getSourceList())) return false;
      if (hasDestPort() != other.hasDestPort()) return false;
      if (hasDestPort()) {
        if (getDestPort()
            != other.getDestPort()) return false;
      }
      if (hasDestNodeId() != other.hasDestNodeId()) return false;
      if (hasDestNodeId()) {
        if (getDestNodeId()
            != other.getDestNodeId()) return false;
      }
      if (hasSourceNodeId() != other.hasSourceNodeId()) return false;
      if (hasSourceNodeId()) {
        if (getSourceNodeId()
            != other.getSourceNodeId()) return false;
      }
      if (hasAck() != other.hasAck()) return false;
      if (hasAck()) {
        if (getAck()
            != other.getAck()) return false;
      }
      if (hasSourcePortAck() != other.hasSourcePortAck()) return false;
      if (hasSourcePortAck()) {
        if (getSourcePortAck()
            != other.getSourcePortAck()) return false;
      }
      if (hasCurrentHop() != other.hasCurrentHop()) return false;
      if (hasCurrentHop()) {
        if (getCurrentHop()
            != other.getCurrentHop()) return false;
      }
      if (hasBufferSize() != other.hasBufferSize()) return false;
      if (hasBufferSize()) {
        if (getBufferSize()
            != other.getBufferSize()) return false;
      }
      if (hasRetry() != other.hasRetry()) return false;
      if (hasRetry()) {
        if (getRetry()
            != other.getRetry()) return false;
      }
      if (hasTimeWait() != other.hasTimeWait()) return false;
      if (hasTimeWait()) {
        if (getTimeWait()
            != other.getTimeWait()) return false;
      }
      if (hasExpiry() != other.hasExpiry()) return false;
      if (hasExpiry()) {
        if (getExpiry()
            != other.getExpiry()) return false;
      }
      if (hasConnectTimeout() != other.hasConnectTimeout()) return false;
      if (hasConnectTimeout()) {
        if (getConnectTimeout()
            != other.getConnectTimeout()) return false;
      }
      if (hasFlowId() != other.hasFlowId()) return false;
      if (hasFlowId()) {
        if (getFlowId()
            != other.getFlowId()) return false;
      }
      if (hasDataType() != other.hasDataType()) return false;
      if (hasDataType()) {
        if (getDataType()
            != other.getDataType()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (getDestCount() > 0) {
        hash = (37 * hash) + DEST_FIELD_NUMBER;
        hash = (53 * hash) + getDestList().hashCode();
      }
      if (getSourceCount() > 0) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSourceList().hashCode();
      }
      if (hasDestPort()) {
        hash = (37 * hash) + DESTPORT_FIELD_NUMBER;
        hash = (53 * hash) + getDestPort();
      }
      if (hasDestNodeId()) {
        hash = (37 * hash) + DESTNODEID_FIELD_NUMBER;
        hash = (53 * hash) + getDestNodeId();
      }
      if (hasSourceNodeId()) {
        hash = (37 * hash) + SOURCENODEID_FIELD_NUMBER;
        hash = (53 * hash) + getSourceNodeId();
      }
      if (hasAck()) {
        hash = (37 * hash) + ACK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAck());
      }
      if (hasSourcePortAck()) {
        hash = (37 * hash) + SOURCEPORTACK_FIELD_NUMBER;
        hash = (53 * hash) + getSourcePortAck();
      }
      if (hasCurrentHop()) {
        hash = (37 * hash) + CURRENTHOP_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentHop();
      }
      if (hasBufferSize()) {
        hash = (37 * hash) + BUFFERSIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBufferSize();
      }
      if (hasRetry()) {
        hash = (37 * hash) + RETRY_FIELD_NUMBER;
        hash = (53 * hash) + getRetry();
      }
      if (hasTimeWait()) {
        hash = (37 * hash) + TIMEWAIT_FIELD_NUMBER;
        hash = (53 * hash) + getTimeWait();
      }
      if (hasExpiry()) {
        hash = (37 * hash) + EXPIRY_FIELD_NUMBER;
        hash = (53 * hash) + getExpiry();
      }
      if (hasConnectTimeout()) {
        hash = (37 * hash) + CONNECTTIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getConnectTimeout();
      }
      if (hasFlowId()) {
        hash = (37 * hash) + FLOWID_FIELD_NUMBER;
        hash = (53 * hash) + getFlowId();
      }
      if (hasDataType()) {
        hash = (37 * hash) + DATATYPE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDataType());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UnicastHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UnicastHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UnicastHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UnicastHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UnicastHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UnicastHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UnicastHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UnicastHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UnicastHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UnicastHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UnicastHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UnicastHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UnicastHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 1
     * </pre>
     *
     * Protobuf type {@code UnicastHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UnicastHeader)
        UnicastHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_UnicastHeader_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_UnicastHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UnicastHeader.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.UnicastHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dest_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        source_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        destPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        destNodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        sourceNodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        ack_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        sourcePortAck_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        currentHop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        bufferSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        retry_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        timeWait_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        expiry_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        connectTimeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        flowId_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        dataType_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_UnicastHeader_descriptor;
      }

      @Override
      public UnicastHeader getDefaultInstanceForType() {
        return UnicastHeader.getDefaultInstance();
      }

      @Override
      public UnicastHeader build() {
        UnicastHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public UnicastHeader buildPartial() {
        UnicastHeader result = new UnicastHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          dest_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dest_ = dest_;
        if (((bitField0_ & 0x00000004) != 0)) {
          source_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.destPort_ = destPort_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.destNodeId_ = destNodeId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.sourceNodeId_ = sourceNodeId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.ack_ = ack_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.sourcePortAck_ = sourcePortAck_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.currentHop_ = currentHop_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.bufferSize_ = bufferSize_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.retry_ = retry_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.timeWait_ = timeWait_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.expiry_ = expiry_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.connectTimeout_ = connectTimeout_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.flowId_ = flowId_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.dataType_ = dataType_;
          to_bitField0_ |= 0x00002000;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UnicastHeader) {
          return mergeFrom((UnicastHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UnicastHeader other) {
        if (other == UnicastHeader.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.dest_.isEmpty()) {
          if (dest_.isEmpty()) {
            dest_ = other.dest_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDestIsMutable();
            dest_.addAll(other.dest_);
          }
          onChanged();
        }
        if (!other.source_.isEmpty()) {
          if (source_.isEmpty()) {
            source_ = other.source_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSourceIsMutable();
            source_.addAll(other.source_);
          }
          onChanged();
        }
        if (other.hasDestPort()) {
          setDestPort(other.getDestPort());
        }
        if (other.hasDestNodeId()) {
          setDestNodeId(other.getDestNodeId());
        }
        if (other.hasSourceNodeId()) {
          setSourceNodeId(other.getSourceNodeId());
        }
        if (other.hasAck()) {
          setAck(other.getAck());
        }
        if (other.hasSourcePortAck()) {
          setSourcePortAck(other.getSourcePortAck());
        }
        if (other.hasCurrentHop()) {
          setCurrentHop(other.getCurrentHop());
        }
        if (other.hasBufferSize()) {
          setBufferSize(other.getBufferSize());
        }
        if (other.hasRetry()) {
          setRetry(other.getRetry());
        }
        if (other.hasTimeWait()) {
          setTimeWait(other.getTimeWait());
        }
        if (other.hasExpiry()) {
          setExpiry(other.getExpiry());
        }
        if (other.hasConnectTimeout()) {
          setConnectTimeout(other.getConnectTimeout());
        }
        if (other.hasFlowId()) {
          setFlowId(other.getFlowId());
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (!hasDestPort()) {
          return false;
        }
        if (!hasAck()) {
          return false;
        }
        if (!hasCurrentHop()) {
          return false;
        }
        if (!hasBufferSize()) {
          return false;
        }
        if (!hasRetry()) {
          return false;
        }
        if (!hasConnectTimeout()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UnicastHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UnicastHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return The id.
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dest_ = emptyIntList();
      private void ensureDestIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          dest_ = mutableCopy(dest_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @return A list containing the dest.
       */
      public java.util.List<Integer>
          getDestList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(dest_) : dest_;
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @return The count of dest.
       */
      public int getDestCount() {
        return dest_.size();
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @param index The index of the element to return.
       * @return The dest at the given index.
       */
      public int getDest(int index) {
        return dest_.getInt(index);
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @param index The index to set the value at.
       * @param value The dest to set.
       * @return This builder for chaining.
       */
      public Builder setDest(
          int index, int value) {
        ensureDestIsMutable();
        dest_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @param value The dest to add.
       * @return This builder for chaining.
       */
      public Builder addDest(int value) {
        ensureDestIsMutable();
        dest_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @param values The dest to add.
       * @return This builder for chaining.
       */
      public Builder addAllDest(
          Iterable<? extends Integer> values) {
        ensureDestIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dest_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDest() {
        dest_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList source_ = emptyIntList();
      private void ensureSourceIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          source_ = mutableCopy(source_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @return A list containing the source.
       */
      public java.util.List<Integer>
          getSourceList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(source_) : source_;
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @return The count of source.
       */
      public int getSourceCount() {
        return source_.size();
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @param index The index of the element to return.
       * @return The source at the given index.
       */
      public int getSource(int index) {
        return source_.getInt(index);
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @param index The index to set the value at.
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          int index, int value) {
        ensureSourceIsMutable();
        source_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @param value The source to add.
       * @return This builder for chaining.
       */
      public Builder addSource(int value) {
        ensureSourceIsMutable();
        source_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @param values The source to add.
       * @return This builder for chaining.
       */
      public Builder addAllSource(
          Iterable<? extends Integer> values) {
        ensureSourceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, source_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        source_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int destPort_ ;
      /**
       * <code>required int32 destPort = 4;</code>
       * @return Whether the destPort field is set.
       */
      public boolean hasDestPort() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required int32 destPort = 4;</code>
       * @return The destPort.
       */
      public int getDestPort() {
        return destPort_;
      }
      /**
       * <code>required int32 destPort = 4;</code>
       * @param value The destPort to set.
       * @return This builder for chaining.
       */
      public Builder setDestPort(int value) {
        bitField0_ |= 0x00000008;
        destPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 destPort = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        destPort_ = 0;
        onChanged();
        return this;
      }

      private int destNodeId_ ;
      /**
       * <code>optional int32 destNodeId = 5 [default = 0];</code>
       * @return Whether the destNodeId field is set.
       */
      public boolean hasDestNodeId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 destNodeId = 5 [default = 0];</code>
       * @return The destNodeId.
       */
      public int getDestNodeId() {
        return destNodeId_;
      }
      /**
       * <code>optional int32 destNodeId = 5 [default = 0];</code>
       * @param value The destNodeId to set.
       * @return This builder for chaining.
       */
      public Builder setDestNodeId(int value) {
        bitField0_ |= 0x00000010;
        destNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 destNodeId = 5 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearDestNodeId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        destNodeId_ = 0;
        onChanged();
        return this;
      }

      private int sourceNodeId_ ;
      /**
       * <code>optional int32 sourceNodeId = 6 [default = 0];</code>
       * @return Whether the sourceNodeId field is set.
       */
      public boolean hasSourceNodeId() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 sourceNodeId = 6 [default = 0];</code>
       * @return The sourceNodeId.
       */
      public int getSourceNodeId() {
        return sourceNodeId_;
      }
      /**
       * <code>optional int32 sourceNodeId = 6 [default = 0];</code>
       * @param value The sourceNodeId to set.
       * @return This builder for chaining.
       */
      public Builder setSourceNodeId(int value) {
        bitField0_ |= 0x00000020;
        sourceNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sourceNodeId = 6 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceNodeId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sourceNodeId_ = 0;
        onChanged();
        return this;
      }

      private boolean ack_ ;
      /**
       * <code>required bool ack = 7;</code>
       * @return Whether the ack field is set.
       */
      public boolean hasAck() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>required bool ack = 7;</code>
       * @return The ack.
       */
      public boolean getAck() {
        return ack_;
      }
      /**
       * <code>required bool ack = 7;</code>
       * @param value The ack to set.
       * @return This builder for chaining.
       */
      public Builder setAck(boolean value) {
        bitField0_ |= 0x00000040;
        ack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool ack = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAck() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ack_ = false;
        onChanged();
        return this;
      }

      private int sourcePortAck_ ;
      /**
       * <code>optional int32 sourcePortAck = 8;</code>
       * @return Whether the sourcePortAck field is set.
       */
      public boolean hasSourcePortAck() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional int32 sourcePortAck = 8;</code>
       * @return The sourcePortAck.
       */
      public int getSourcePortAck() {
        return sourcePortAck_;
      }
      /**
       * <code>optional int32 sourcePortAck = 8;</code>
       * @param value The sourcePortAck to set.
       * @return This builder for chaining.
       */
      public Builder setSourcePortAck(int value) {
        bitField0_ |= 0x00000080;
        sourcePortAck_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sourcePortAck = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourcePortAck() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sourcePortAck_ = 0;
        onChanged();
        return this;
      }

      private int currentHop_ ;
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 currentHop = 9;</code>
       * @return Whether the currentHop field is set.
       */
      public boolean hasCurrentHop() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 currentHop = 9;</code>
       * @return The currentHop.
       */
      public int getCurrentHop() {
        return currentHop_;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 currentHop = 9;</code>
       * @param value The currentHop to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentHop(int value) {
        bitField0_ |= 0x00000100;
        currentHop_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 currentHop = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentHop() {
        bitField0_ = (bitField0_ & ~0x00000100);
        currentHop_ = 0;
        onChanged();
        return this;
      }

      private int bufferSize_ ;
      /**
       * <pre>
       * [default = 51250];
       * </pre>
       *
       * <code>required int32 bufferSize = 10;</code>
       * @return Whether the bufferSize field is set.
       */
      public boolean hasBufferSize() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * [default = 51250];
       * </pre>
       *
       * <code>required int32 bufferSize = 10;</code>
       * @return The bufferSize.
       */
      public int getBufferSize() {
        return bufferSize_;
      }
      /**
       * <pre>
       * [default = 51250];
       * </pre>
       *
       * <code>required int32 bufferSize = 10;</code>
       * @param value The bufferSize to set.
       * @return This builder for chaining.
       */
      public Builder setBufferSize(int value) {
        bitField0_ |= 0x00000200;
        bufferSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 51250];
       * </pre>
       *
       * <code>required int32 bufferSize = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearBufferSize() {
        bitField0_ = (bitField0_ & ~0x00000200);
        bufferSize_ = 0;
        onChanged();
        return this;
      }

      private int retry_ ;
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 retry = 11;</code>
       * @return Whether the retry field is set.
       */
      public boolean hasRetry() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 retry = 11;</code>
       * @return The retry.
       */
      public int getRetry() {
        return retry_;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 retry = 11;</code>
       * @param value The retry to set.
       * @return This builder for chaining.
       */
      public Builder setRetry(int value) {
        bitField0_ |= 0x00000400;
        retry_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 retry = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearRetry() {
        bitField0_ = (bitField0_ & ~0x00000400);
        retry_ = 0;
        onChanged();
        return this;
      }

      private int timeWait_ ;
      /**
       * <code>optional int32 timeWait = 12;</code>
       * @return Whether the timeWait field is set.
       */
      public boolean hasTimeWait() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional int32 timeWait = 12;</code>
       * @return The timeWait.
       */
      public int getTimeWait() {
        return timeWait_;
      }
      /**
       * <code>optional int32 timeWait = 12;</code>
       * @param value The timeWait to set.
       * @return This builder for chaining.
       */
      public Builder setTimeWait(int value) {
        bitField0_ |= 0x00000800;
        timeWait_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeWait = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeWait() {
        bitField0_ = (bitField0_ & ~0x00000800);
        timeWait_ = 0;
        onChanged();
        return this;
      }

      private int expiry_ ;
      /**
       * <code>optional int32 expiry = 13;</code>
       * @return Whether the expiry field is set.
       */
      public boolean hasExpiry() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional int32 expiry = 13;</code>
       * @return The expiry.
       */
      public int getExpiry() {
        return expiry_;
      }
      /**
       * <code>optional int32 expiry = 13;</code>
       * @param value The expiry to set.
       * @return This builder for chaining.
       */
      public Builder setExpiry(int value) {
        bitField0_ |= 0x00001000;
        expiry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 expiry = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpiry() {
        bitField0_ = (bitField0_ & ~0x00001000);
        expiry_ = 0;
        onChanged();
        return this;
      }

      private int connectTimeout_ ;
      /**
       * <pre>
       * [default = 500];
       * </pre>
       *
       * <code>required int32 connectTimeout = 14;</code>
       * @return Whether the connectTimeout field is set.
       */
      public boolean hasConnectTimeout() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * [default = 500];
       * </pre>
       *
       * <code>required int32 connectTimeout = 14;</code>
       * @return The connectTimeout.
       */
      public int getConnectTimeout() {
        return connectTimeout_;
      }
      /**
       * <pre>
       * [default = 500];
       * </pre>
       *
       * <code>required int32 connectTimeout = 14;</code>
       * @param value The connectTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setConnectTimeout(int value) {
        bitField0_ |= 0x00002000;
        connectTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 500];
       * </pre>
       *
       * <code>required int32 connectTimeout = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnectTimeout() {
        bitField0_ = (bitField0_ & ~0x00002000);
        connectTimeout_ = 0;
        onChanged();
        return this;
      }

      private int flowId_ ;
      /**
       * <pre>
       * Alessandro Dolci
       * </pre>
       *
       * <code>optional int32 flowId = 15;</code>
       * @return Whether the flowId field is set.
       */
      public boolean hasFlowId() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * Alessandro Dolci
       * </pre>
       *
       * <code>optional int32 flowId = 15;</code>
       * @return The flowId.
       */
      public int getFlowId() {
        return flowId_;
      }
      /**
       * <pre>
       * Alessandro Dolci
       * </pre>
       *
       * <code>optional int32 flowId = 15;</code>
       * @param value The flowId to set.
       * @return This builder for chaining.
       */
      public Builder setFlowId(int value) {
        bitField0_ |= 0x00004000;
        flowId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alessandro Dolci
       * </pre>
       *
       * <code>optional int32 flowId = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlowId() {
        bitField0_ = (bitField0_ & ~0x00004000);
        flowId_ = 0;
        onChanged();
        return this;
      }

      private long dataType_ ;
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 16;</code>
       * @return Whether the dataType field is set.
       */
      public boolean hasDataType() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 16;</code>
       * @return The dataType.
       */
      public long getDataType() {
        return dataType_;
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 16;</code>
       * @param value The dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataType(long value) {
        bitField0_ |= 0x00008000;
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00008000);
        dataType_ = 0L;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:UnicastHeader)
    }

    // @@protoc_insertion_point(class_scope:UnicastHeader)
    private static final UnicastHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UnicastHeader();
    }

    public static UnicastHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<UnicastHeader>
        PARSER = new com.google.protobuf.AbstractParser<UnicastHeader>() {
      @Override
      public UnicastHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnicastHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnicastHeader> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UnicastHeader> getParserForType() {
      return PARSER;
    }

    @Override
    public UnicastHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UnicastPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:UnicastPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>repeated int32 dest = 2;</code>
     * @return A list containing the dest.
     */
    java.util.List<Integer> getDestList();
    /**
     * <code>repeated int32 dest = 2;</code>
     * @return The count of dest.
     */
    int getDestCount();
    /**
     * <code>repeated int32 dest = 2;</code>
     * @param index The index of the element to return.
     * @return The dest at the given index.
     */
    int getDest(int index);

    /**
     * <code>repeated int32 source = 3;</code>
     * @return A list containing the source.
     */
    java.util.List<Integer> getSourceList();
    /**
     * <code>repeated int32 source = 3;</code>
     * @return The count of source.
     */
    int getSourceCount();
    /**
     * <code>repeated int32 source = 3;</code>
     * @param index The index of the element to return.
     * @return The source at the given index.
     */
    int getSource(int index);

    /**
     * <code>required int32 destPort = 4;</code>
     * @return Whether the destPort field is set.
     */
    boolean hasDestPort();
    /**
     * <code>required int32 destPort = 4;</code>
     * @return The destPort.
     */
    int getDestPort();

    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 destNodeId = 5;</code>
     * @return Whether the destNodeId field is set.
     */
    boolean hasDestNodeId();
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 destNodeId = 5;</code>
     * @return The destNodeId.
     */
    int getDestNodeId();

    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 sourceNodeId = 6;</code>
     * @return Whether the sourceNodeId field is set.
     */
    boolean hasSourceNodeId();
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 sourceNodeId = 6;</code>
     * @return The sourceNodeId.
     */
    int getSourceNodeId();

    /**
     * <code>required bool ack = 7;</code>
     * @return Whether the ack field is set.
     */
    boolean hasAck();
    /**
     * <code>required bool ack = 7;</code>
     * @return The ack.
     */
    boolean getAck();

    /**
     * <code>optional int32 sourcePortAck = 8;</code>
     * @return Whether the sourcePortAck field is set.
     */
    boolean hasSourcePortAck();
    /**
     * <code>optional int32 sourcePortAck = 8;</code>
     * @return The sourcePortAck.
     */
    int getSourcePortAck();

    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 currentHop = 9;</code>
     * @return Whether the currentHop field is set.
     */
    boolean hasCurrentHop();
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 currentHop = 9;</code>
     * @return The currentHop.
     */
    int getCurrentHop();

    /**
     * <pre>
     * [default = 51250];
     * </pre>
     *
     * <code>required int32 bufferSize = 10;</code>
     * @return Whether the bufferSize field is set.
     */
    boolean hasBufferSize();
    /**
     * <pre>
     * [default = 51250];
     * </pre>
     *
     * <code>required int32 bufferSize = 10;</code>
     * @return The bufferSize.
     */
    int getBufferSize();

    /**
     * <code>required int32 retry = 11 [default = 0];</code>
     * @return Whether the retry field is set.
     */
    boolean hasRetry();
    /**
     * <code>required int32 retry = 11 [default = 0];</code>
     * @return The retry.
     */
    int getRetry();

    /**
     * <code>optional int32 timeWait = 12;</code>
     * @return Whether the timeWait field is set.
     */
    boolean hasTimeWait();
    /**
     * <code>optional int32 timeWait = 12;</code>
     * @return The timeWait.
     */
    int getTimeWait();

    /**
     * <code>optional int32 expiry = 13;</code>
     * @return Whether the expiry field is set.
     */
    boolean hasExpiry();
    /**
     * <code>optional int32 expiry = 13;</code>
     * @return The expiry.
     */
    int getExpiry();

    /**
     * <pre>
     * [default = 500];
     * </pre>
     *
     * <code>required int32 connectTimeout = 14;</code>
     * @return Whether the connectTimeout field is set.
     */
    boolean hasConnectTimeout();
    /**
     * <pre>
     * [default = 500];
     * </pre>
     *
     * <code>required int32 connectTimeout = 14;</code>
     * @return The connectTimeout.
     */
    int getConnectTimeout();

    /**
     * <pre>
     * Alessandro Dolci
     * </pre>
     *
     * <code>optional int32 flowId = 15;</code>
     * @return Whether the flowId field is set.
     */
    boolean hasFlowId();
    /**
     * <pre>
     * Alessandro Dolci
     * </pre>
     *
     * <code>optional int32 flowId = 15;</code>
     * @return The flowId.
     */
    int getFlowId();

    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 16;</code>
     * @return Whether the dataType field is set.
     */
    boolean hasDataType();
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 16;</code>
     * @return The dataType.
     */
    long getDataType();

    /**
     * <code>required bytes payload = 99;</code>
     * @return Whether the payload field is set.
     */
    boolean hasPayload();
    /**
     * <code>required bytes payload = 99;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * <pre>
   * packet id 3
   * </pre>
   *
   * Protobuf type {@code UnicastPacket}
   */
  public  static final class UnicastPacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:UnicastPacket)
      UnicastPacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UnicastPacket.newBuilder() to construct.
    private UnicastPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UnicastPacket() {
      dest_ = emptyIntList();
      source_ = emptyIntList();
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new UnicastPacket();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UnicastPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                dest_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              dest_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                dest_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                dest_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                source_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              source_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                source_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                source_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              destPort_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              destNodeId_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              sourceNodeId_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              ack_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              sourcePortAck_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              currentHop_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              bufferSize_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              retry_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              timeWait_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              expiry_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              connectTimeout_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              flowId_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              dataType_ = input.readInt64();
              break;
            }
            case 794: {
              bitField0_ |= 0x00004000;
              payload_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          dest_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          source_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_UnicastPacket_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_UnicastPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              UnicastPacket.class, Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 id = 1;</code>
     * @return The id.
     */
    public int getId() {
      return id_;
    }

    public static final int DEST_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList dest_;
    /**
     * <code>repeated int32 dest = 2;</code>
     * @return A list containing the dest.
     */
    public java.util.List<Integer>
        getDestList() {
      return dest_;
    }
    /**
     * <code>repeated int32 dest = 2;</code>
     * @return The count of dest.
     */
    public int getDestCount() {
      return dest_.size();
    }
    /**
     * <code>repeated int32 dest = 2;</code>
     * @param index The index of the element to return.
     * @return The dest at the given index.
     */
    public int getDest(int index) {
      return dest_.getInt(index);
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList source_;
    /**
     * <code>repeated int32 source = 3;</code>
     * @return A list containing the source.
     */
    public java.util.List<Integer>
        getSourceList() {
      return source_;
    }
    /**
     * <code>repeated int32 source = 3;</code>
     * @return The count of source.
     */
    public int getSourceCount() {
      return source_.size();
    }
    /**
     * <code>repeated int32 source = 3;</code>
     * @param index The index of the element to return.
     * @return The source at the given index.
     */
    public int getSource(int index) {
      return source_.getInt(index);
    }

    public static final int DESTPORT_FIELD_NUMBER = 4;
    private int destPort_;
    /**
     * <code>required int32 destPort = 4;</code>
     * @return Whether the destPort field is set.
     */
    public boolean hasDestPort() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 destPort = 4;</code>
     * @return The destPort.
     */
    public int getDestPort() {
      return destPort_;
    }

    public static final int DESTNODEID_FIELD_NUMBER = 5;
    private int destNodeId_;
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 destNodeId = 5;</code>
     * @return Whether the destNodeId field is set.
     */
    public boolean hasDestNodeId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 destNodeId = 5;</code>
     * @return The destNodeId.
     */
    public int getDestNodeId() {
      return destNodeId_;
    }

    public static final int SOURCENODEID_FIELD_NUMBER = 6;
    private int sourceNodeId_;
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 sourceNodeId = 6;</code>
     * @return Whether the sourceNodeId field is set.
     */
    public boolean hasSourceNodeId() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 sourceNodeId = 6;</code>
     * @return The sourceNodeId.
     */
    public int getSourceNodeId() {
      return sourceNodeId_;
    }

    public static final int ACK_FIELD_NUMBER = 7;
    private boolean ack_;
    /**
     * <code>required bool ack = 7;</code>
     * @return Whether the ack field is set.
     */
    public boolean hasAck() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>required bool ack = 7;</code>
     * @return The ack.
     */
    public boolean getAck() {
      return ack_;
    }

    public static final int SOURCEPORTACK_FIELD_NUMBER = 8;
    private int sourcePortAck_;
    /**
     * <code>optional int32 sourcePortAck = 8;</code>
     * @return Whether the sourcePortAck field is set.
     */
    public boolean hasSourcePortAck() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 sourcePortAck = 8;</code>
     * @return The sourcePortAck.
     */
    public int getSourcePortAck() {
      return sourcePortAck_;
    }

    public static final int CURRENTHOP_FIELD_NUMBER = 9;
    private int currentHop_;
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 currentHop = 9;</code>
     * @return Whether the currentHop field is set.
     */
    public boolean hasCurrentHop() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>required int32 currentHop = 9;</code>
     * @return The currentHop.
     */
    public int getCurrentHop() {
      return currentHop_;
    }

    public static final int BUFFERSIZE_FIELD_NUMBER = 10;
    private int bufferSize_;
    /**
     * <pre>
     * [default = 51250];
     * </pre>
     *
     * <code>required int32 bufferSize = 10;</code>
     * @return Whether the bufferSize field is set.
     */
    public boolean hasBufferSize() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * [default = 51250];
     * </pre>
     *
     * <code>required int32 bufferSize = 10;</code>
     * @return The bufferSize.
     */
    public int getBufferSize() {
      return bufferSize_;
    }

    public static final int RETRY_FIELD_NUMBER = 11;
    private int retry_;
    /**
     * <code>required int32 retry = 11 [default = 0];</code>
     * @return Whether the retry field is set.
     */
    public boolean hasRetry() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>required int32 retry = 11 [default = 0];</code>
     * @return The retry.
     */
    public int getRetry() {
      return retry_;
    }

    public static final int TIMEWAIT_FIELD_NUMBER = 12;
    private int timeWait_;
    /**
     * <code>optional int32 timeWait = 12;</code>
     * @return Whether the timeWait field is set.
     */
    public boolean hasTimeWait() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional int32 timeWait = 12;</code>
     * @return The timeWait.
     */
    public int getTimeWait() {
      return timeWait_;
    }

    public static final int EXPIRY_FIELD_NUMBER = 13;
    private int expiry_;
    /**
     * <code>optional int32 expiry = 13;</code>
     * @return Whether the expiry field is set.
     */
    public boolean hasExpiry() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional int32 expiry = 13;</code>
     * @return The expiry.
     */
    public int getExpiry() {
      return expiry_;
    }

    public static final int CONNECTTIMEOUT_FIELD_NUMBER = 14;
    private int connectTimeout_;
    /**
     * <pre>
     * [default = 500];
     * </pre>
     *
     * <code>required int32 connectTimeout = 14;</code>
     * @return Whether the connectTimeout field is set.
     */
    public boolean hasConnectTimeout() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * [default = 500];
     * </pre>
     *
     * <code>required int32 connectTimeout = 14;</code>
     * @return The connectTimeout.
     */
    public int getConnectTimeout() {
      return connectTimeout_;
    }

    public static final int FLOWID_FIELD_NUMBER = 15;
    private int flowId_;
    /**
     * <pre>
     * Alessandro Dolci
     * </pre>
     *
     * <code>optional int32 flowId = 15;</code>
     * @return Whether the flowId field is set.
     */
    public boolean hasFlowId() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * Alessandro Dolci
     * </pre>
     *
     * <code>optional int32 flowId = 15;</code>
     * @return The flowId.
     */
    public int getFlowId() {
      return flowId_;
    }

    public static final int DATATYPE_FIELD_NUMBER = 16;
    private long dataType_;
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 16;</code>
     * @return Whether the dataType field is set.
     */
    public boolean hasDataType() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 16;</code>
     * @return The dataType.
     */
    public long getDataType() {
      return dataType_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 99;
    private com.google.protobuf.ByteString payload_;
    /**
     * <code>required bytes payload = 99;</code>
     * @return Whether the payload field is set.
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>required bytes payload = 99;</code>
     * @return The payload.
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDestPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAck()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCurrentHop()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBufferSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRetry()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConnectTimeout()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPayload()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < dest_.size(); i++) {
        output.writeInt32(2, dest_.getInt(i));
      }
      for (int i = 0; i < source_.size(); i++) {
        output.writeInt32(3, source_.getInt(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(4, destPort_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(5, destNodeId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(6, sourceNodeId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(7, ack_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(8, sourcePortAck_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(9, currentHop_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(10, bufferSize_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(11, retry_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(12, timeWait_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(13, expiry_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(14, connectTimeout_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeInt32(15, flowId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt64(16, dataType_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeBytes(99, payload_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dest_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dest_.getInt(i));
        }
        size += dataSize;
        size += 1 * getDestList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < source_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(source_.getInt(i));
        }
        size += dataSize;
        size += 1 * getSourceList().size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, destPort_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, destNodeId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, sourceNodeId_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, ack_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, sourcePortAck_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, currentHop_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, bufferSize_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, retry_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, timeWait_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, expiry_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, connectTimeout_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, flowId_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, dataType_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(99, payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof UnicastPacket)) {
        return super.equals(obj);
      }
      UnicastPacket other = (UnicastPacket) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (!getDestList()
          .equals(other.getDestList())) return false;
      if (!getSourceList()
          .equals(other.getSourceList())) return false;
      if (hasDestPort() != other.hasDestPort()) return false;
      if (hasDestPort()) {
        if (getDestPort()
            != other.getDestPort()) return false;
      }
      if (hasDestNodeId() != other.hasDestNodeId()) return false;
      if (hasDestNodeId()) {
        if (getDestNodeId()
            != other.getDestNodeId()) return false;
      }
      if (hasSourceNodeId() != other.hasSourceNodeId()) return false;
      if (hasSourceNodeId()) {
        if (getSourceNodeId()
            != other.getSourceNodeId()) return false;
      }
      if (hasAck() != other.hasAck()) return false;
      if (hasAck()) {
        if (getAck()
            != other.getAck()) return false;
      }
      if (hasSourcePortAck() != other.hasSourcePortAck()) return false;
      if (hasSourcePortAck()) {
        if (getSourcePortAck()
            != other.getSourcePortAck()) return false;
      }
      if (hasCurrentHop() != other.hasCurrentHop()) return false;
      if (hasCurrentHop()) {
        if (getCurrentHop()
            != other.getCurrentHop()) return false;
      }
      if (hasBufferSize() != other.hasBufferSize()) return false;
      if (hasBufferSize()) {
        if (getBufferSize()
            != other.getBufferSize()) return false;
      }
      if (hasRetry() != other.hasRetry()) return false;
      if (hasRetry()) {
        if (getRetry()
            != other.getRetry()) return false;
      }
      if (hasTimeWait() != other.hasTimeWait()) return false;
      if (hasTimeWait()) {
        if (getTimeWait()
            != other.getTimeWait()) return false;
      }
      if (hasExpiry() != other.hasExpiry()) return false;
      if (hasExpiry()) {
        if (getExpiry()
            != other.getExpiry()) return false;
      }
      if (hasConnectTimeout() != other.hasConnectTimeout()) return false;
      if (hasConnectTimeout()) {
        if (getConnectTimeout()
            != other.getConnectTimeout()) return false;
      }
      if (hasFlowId() != other.hasFlowId()) return false;
      if (hasFlowId()) {
        if (getFlowId()
            != other.getFlowId()) return false;
      }
      if (hasDataType() != other.hasDataType()) return false;
      if (hasDataType()) {
        if (getDataType()
            != other.getDataType()) return false;
      }
      if (hasPayload() != other.hasPayload()) return false;
      if (hasPayload()) {
        if (!getPayload()
            .equals(other.getPayload())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (getDestCount() > 0) {
        hash = (37 * hash) + DEST_FIELD_NUMBER;
        hash = (53 * hash) + getDestList().hashCode();
      }
      if (getSourceCount() > 0) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSourceList().hashCode();
      }
      if (hasDestPort()) {
        hash = (37 * hash) + DESTPORT_FIELD_NUMBER;
        hash = (53 * hash) + getDestPort();
      }
      if (hasDestNodeId()) {
        hash = (37 * hash) + DESTNODEID_FIELD_NUMBER;
        hash = (53 * hash) + getDestNodeId();
      }
      if (hasSourceNodeId()) {
        hash = (37 * hash) + SOURCENODEID_FIELD_NUMBER;
        hash = (53 * hash) + getSourceNodeId();
      }
      if (hasAck()) {
        hash = (37 * hash) + ACK_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAck());
      }
      if (hasSourcePortAck()) {
        hash = (37 * hash) + SOURCEPORTACK_FIELD_NUMBER;
        hash = (53 * hash) + getSourcePortAck();
      }
      if (hasCurrentHop()) {
        hash = (37 * hash) + CURRENTHOP_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentHop();
      }
      if (hasBufferSize()) {
        hash = (37 * hash) + BUFFERSIZE_FIELD_NUMBER;
        hash = (53 * hash) + getBufferSize();
      }
      if (hasRetry()) {
        hash = (37 * hash) + RETRY_FIELD_NUMBER;
        hash = (53 * hash) + getRetry();
      }
      if (hasTimeWait()) {
        hash = (37 * hash) + TIMEWAIT_FIELD_NUMBER;
        hash = (53 * hash) + getTimeWait();
      }
      if (hasExpiry()) {
        hash = (37 * hash) + EXPIRY_FIELD_NUMBER;
        hash = (53 * hash) + getExpiry();
      }
      if (hasConnectTimeout()) {
        hash = (37 * hash) + CONNECTTIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + getConnectTimeout();
      }
      if (hasFlowId()) {
        hash = (37 * hash) + FLOWID_FIELD_NUMBER;
        hash = (53 * hash) + getFlowId();
      }
      if (hasDataType()) {
        hash = (37 * hash) + DATATYPE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDataType());
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static UnicastPacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UnicastPacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UnicastPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UnicastPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UnicastPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static UnicastPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static UnicastPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UnicastPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static UnicastPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static UnicastPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static UnicastPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static UnicastPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(UnicastPacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 3
     * </pre>
     *
     * Protobuf type {@code UnicastPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:UnicastPacket)
        UnicastPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_UnicastPacket_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_UnicastPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                UnicastPacket.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.UnicastPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dest_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        source_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        destPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        destNodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        sourceNodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        ack_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        sourcePortAck_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        currentHop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        bufferSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        retry_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        timeWait_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        expiry_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        connectTimeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        flowId_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        dataType_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        payload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_UnicastPacket_descriptor;
      }

      @Override
      public UnicastPacket getDefaultInstanceForType() {
        return UnicastPacket.getDefaultInstance();
      }

      @Override
      public UnicastPacket build() {
        UnicastPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public UnicastPacket buildPartial() {
        UnicastPacket result = new UnicastPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          dest_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dest_ = dest_;
        if (((bitField0_ & 0x00000004) != 0)) {
          source_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.destPort_ = destPort_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.destNodeId_ = destNodeId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.sourceNodeId_ = sourceNodeId_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.ack_ = ack_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.sourcePortAck_ = sourcePortAck_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.currentHop_ = currentHop_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.bufferSize_ = bufferSize_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.retry_ = retry_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.timeWait_ = timeWait_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.expiry_ = expiry_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.connectTimeout_ = connectTimeout_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.flowId_ = flowId_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.dataType_ = dataType_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          to_bitField0_ |= 0x00004000;
        }
        result.payload_ = payload_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof UnicastPacket) {
          return mergeFrom((UnicastPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(UnicastPacket other) {
        if (other == UnicastPacket.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.dest_.isEmpty()) {
          if (dest_.isEmpty()) {
            dest_ = other.dest_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDestIsMutable();
            dest_.addAll(other.dest_);
          }
          onChanged();
        }
        if (!other.source_.isEmpty()) {
          if (source_.isEmpty()) {
            source_ = other.source_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSourceIsMutable();
            source_.addAll(other.source_);
          }
          onChanged();
        }
        if (other.hasDestPort()) {
          setDestPort(other.getDestPort());
        }
        if (other.hasDestNodeId()) {
          setDestNodeId(other.getDestNodeId());
        }
        if (other.hasSourceNodeId()) {
          setSourceNodeId(other.getSourceNodeId());
        }
        if (other.hasAck()) {
          setAck(other.getAck());
        }
        if (other.hasSourcePortAck()) {
          setSourcePortAck(other.getSourcePortAck());
        }
        if (other.hasCurrentHop()) {
          setCurrentHop(other.getCurrentHop());
        }
        if (other.hasBufferSize()) {
          setBufferSize(other.getBufferSize());
        }
        if (other.hasRetry()) {
          setRetry(other.getRetry());
        }
        if (other.hasTimeWait()) {
          setTimeWait(other.getTimeWait());
        }
        if (other.hasExpiry()) {
          setExpiry(other.getExpiry());
        }
        if (other.hasConnectTimeout()) {
          setConnectTimeout(other.getConnectTimeout());
        }
        if (other.hasFlowId()) {
          setFlowId(other.getFlowId());
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (!hasDestPort()) {
          return false;
        }
        if (!hasAck()) {
          return false;
        }
        if (!hasCurrentHop()) {
          return false;
        }
        if (!hasBufferSize()) {
          return false;
        }
        if (!hasRetry()) {
          return false;
        }
        if (!hasConnectTimeout()) {
          return false;
        }
        if (!hasPayload()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        UnicastPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (UnicastPacket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return The id.
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList dest_ = emptyIntList();
      private void ensureDestIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          dest_ = mutableCopy(dest_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @return A list containing the dest.
       */
      public java.util.List<Integer>
          getDestList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(dest_) : dest_;
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @return The count of dest.
       */
      public int getDestCount() {
        return dest_.size();
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @param index The index of the element to return.
       * @return The dest at the given index.
       */
      public int getDest(int index) {
        return dest_.getInt(index);
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @param index The index to set the value at.
       * @param value The dest to set.
       * @return This builder for chaining.
       */
      public Builder setDest(
          int index, int value) {
        ensureDestIsMutable();
        dest_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @param value The dest to add.
       * @return This builder for chaining.
       */
      public Builder addDest(int value) {
        ensureDestIsMutable();
        dest_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @param values The dest to add.
       * @return This builder for chaining.
       */
      public Builder addAllDest(
          Iterable<? extends Integer> values) {
        ensureDestIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dest_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dest = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDest() {
        dest_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList source_ = emptyIntList();
      private void ensureSourceIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          source_ = mutableCopy(source_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @return A list containing the source.
       */
      public java.util.List<Integer>
          getSourceList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(source_) : source_;
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @return The count of source.
       */
      public int getSourceCount() {
        return source_.size();
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @param index The index of the element to return.
       * @return The source at the given index.
       */
      public int getSource(int index) {
        return source_.getInt(index);
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @param index The index to set the value at.
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          int index, int value) {
        ensureSourceIsMutable();
        source_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @param value The source to add.
       * @return This builder for chaining.
       */
      public Builder addSource(int value) {
        ensureSourceIsMutable();
        source_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @param values The source to add.
       * @return This builder for chaining.
       */
      public Builder addAllSource(
          Iterable<? extends Integer> values) {
        ensureSourceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, source_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        source_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int destPort_ ;
      /**
       * <code>required int32 destPort = 4;</code>
       * @return Whether the destPort field is set.
       */
      public boolean hasDestPort() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required int32 destPort = 4;</code>
       * @return The destPort.
       */
      public int getDestPort() {
        return destPort_;
      }
      /**
       * <code>required int32 destPort = 4;</code>
       * @param value The destPort to set.
       * @return This builder for chaining.
       */
      public Builder setDestPort(int value) {
        bitField0_ |= 0x00000008;
        destPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 destPort = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        destPort_ = 0;
        onChanged();
        return this;
      }

      private int destNodeId_ ;
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 destNodeId = 5;</code>
       * @return Whether the destNodeId field is set.
       */
      public boolean hasDestNodeId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 destNodeId = 5;</code>
       * @return The destNodeId.
       */
      public int getDestNodeId() {
        return destNodeId_;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 destNodeId = 5;</code>
       * @param value The destNodeId to set.
       * @return This builder for chaining.
       */
      public Builder setDestNodeId(int value) {
        bitField0_ |= 0x00000010;
        destNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 destNodeId = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestNodeId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        destNodeId_ = 0;
        onChanged();
        return this;
      }

      private int sourceNodeId_ ;
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 sourceNodeId = 6;</code>
       * @return Whether the sourceNodeId field is set.
       */
      public boolean hasSourceNodeId() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 sourceNodeId = 6;</code>
       * @return The sourceNodeId.
       */
      public int getSourceNodeId() {
        return sourceNodeId_;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 sourceNodeId = 6;</code>
       * @param value The sourceNodeId to set.
       * @return This builder for chaining.
       */
      public Builder setSourceNodeId(int value) {
        bitField0_ |= 0x00000020;
        sourceNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 sourceNodeId = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceNodeId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sourceNodeId_ = 0;
        onChanged();
        return this;
      }

      private boolean ack_ ;
      /**
       * <code>required bool ack = 7;</code>
       * @return Whether the ack field is set.
       */
      public boolean hasAck() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>required bool ack = 7;</code>
       * @return The ack.
       */
      public boolean getAck() {
        return ack_;
      }
      /**
       * <code>required bool ack = 7;</code>
       * @param value The ack to set.
       * @return This builder for chaining.
       */
      public Builder setAck(boolean value) {
        bitField0_ |= 0x00000040;
        ack_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool ack = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearAck() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ack_ = false;
        onChanged();
        return this;
      }

      private int sourcePortAck_ ;
      /**
       * <code>optional int32 sourcePortAck = 8;</code>
       * @return Whether the sourcePortAck field is set.
       */
      public boolean hasSourcePortAck() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional int32 sourcePortAck = 8;</code>
       * @return The sourcePortAck.
       */
      public int getSourcePortAck() {
        return sourcePortAck_;
      }
      /**
       * <code>optional int32 sourcePortAck = 8;</code>
       * @param value The sourcePortAck to set.
       * @return This builder for chaining.
       */
      public Builder setSourcePortAck(int value) {
        bitField0_ |= 0x00000080;
        sourcePortAck_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sourcePortAck = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourcePortAck() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sourcePortAck_ = 0;
        onChanged();
        return this;
      }

      private int currentHop_ ;
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 currentHop = 9;</code>
       * @return Whether the currentHop field is set.
       */
      public boolean hasCurrentHop() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 currentHop = 9;</code>
       * @return The currentHop.
       */
      public int getCurrentHop() {
        return currentHop_;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 currentHop = 9;</code>
       * @param value The currentHop to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentHop(int value) {
        bitField0_ |= 0x00000100;
        currentHop_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>required int32 currentHop = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentHop() {
        bitField0_ = (bitField0_ & ~0x00000100);
        currentHop_ = 0;
        onChanged();
        return this;
      }

      private int bufferSize_ ;
      /**
       * <pre>
       * [default = 51250];
       * </pre>
       *
       * <code>required int32 bufferSize = 10;</code>
       * @return Whether the bufferSize field is set.
       */
      public boolean hasBufferSize() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * [default = 51250];
       * </pre>
       *
       * <code>required int32 bufferSize = 10;</code>
       * @return The bufferSize.
       */
      public int getBufferSize() {
        return bufferSize_;
      }
      /**
       * <pre>
       * [default = 51250];
       * </pre>
       *
       * <code>required int32 bufferSize = 10;</code>
       * @param value The bufferSize to set.
       * @return This builder for chaining.
       */
      public Builder setBufferSize(int value) {
        bitField0_ |= 0x00000200;
        bufferSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 51250];
       * </pre>
       *
       * <code>required int32 bufferSize = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearBufferSize() {
        bitField0_ = (bitField0_ & ~0x00000200);
        bufferSize_ = 0;
        onChanged();
        return this;
      }

      private int retry_ ;
      /**
       * <code>required int32 retry = 11 [default = 0];</code>
       * @return Whether the retry field is set.
       */
      public boolean hasRetry() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>required int32 retry = 11 [default = 0];</code>
       * @return The retry.
       */
      public int getRetry() {
        return retry_;
      }
      /**
       * <code>required int32 retry = 11 [default = 0];</code>
       * @param value The retry to set.
       * @return This builder for chaining.
       */
      public Builder setRetry(int value) {
        bitField0_ |= 0x00000400;
        retry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 retry = 11 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearRetry() {
        bitField0_ = (bitField0_ & ~0x00000400);
        retry_ = 0;
        onChanged();
        return this;
      }

      private int timeWait_ ;
      /**
       * <code>optional int32 timeWait = 12;</code>
       * @return Whether the timeWait field is set.
       */
      public boolean hasTimeWait() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional int32 timeWait = 12;</code>
       * @return The timeWait.
       */
      public int getTimeWait() {
        return timeWait_;
      }
      /**
       * <code>optional int32 timeWait = 12;</code>
       * @param value The timeWait to set.
       * @return This builder for chaining.
       */
      public Builder setTimeWait(int value) {
        bitField0_ |= 0x00000800;
        timeWait_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeWait = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeWait() {
        bitField0_ = (bitField0_ & ~0x00000800);
        timeWait_ = 0;
        onChanged();
        return this;
      }

      private int expiry_ ;
      /**
       * <code>optional int32 expiry = 13;</code>
       * @return Whether the expiry field is set.
       */
      public boolean hasExpiry() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional int32 expiry = 13;</code>
       * @return The expiry.
       */
      public int getExpiry() {
        return expiry_;
      }
      /**
       * <code>optional int32 expiry = 13;</code>
       * @param value The expiry to set.
       * @return This builder for chaining.
       */
      public Builder setExpiry(int value) {
        bitField0_ |= 0x00001000;
        expiry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 expiry = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpiry() {
        bitField0_ = (bitField0_ & ~0x00001000);
        expiry_ = 0;
        onChanged();
        return this;
      }

      private int connectTimeout_ ;
      /**
       * <pre>
       * [default = 500];
       * </pre>
       *
       * <code>required int32 connectTimeout = 14;</code>
       * @return Whether the connectTimeout field is set.
       */
      public boolean hasConnectTimeout() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <pre>
       * [default = 500];
       * </pre>
       *
       * <code>required int32 connectTimeout = 14;</code>
       * @return The connectTimeout.
       */
      public int getConnectTimeout() {
        return connectTimeout_;
      }
      /**
       * <pre>
       * [default = 500];
       * </pre>
       *
       * <code>required int32 connectTimeout = 14;</code>
       * @param value The connectTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setConnectTimeout(int value) {
        bitField0_ |= 0x00002000;
        connectTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 500];
       * </pre>
       *
       * <code>required int32 connectTimeout = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnectTimeout() {
        bitField0_ = (bitField0_ & ~0x00002000);
        connectTimeout_ = 0;
        onChanged();
        return this;
      }

      private int flowId_ ;
      /**
       * <pre>
       * Alessandro Dolci
       * </pre>
       *
       * <code>optional int32 flowId = 15;</code>
       * @return Whether the flowId field is set.
       */
      public boolean hasFlowId() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * Alessandro Dolci
       * </pre>
       *
       * <code>optional int32 flowId = 15;</code>
       * @return The flowId.
       */
      public int getFlowId() {
        return flowId_;
      }
      /**
       * <pre>
       * Alessandro Dolci
       * </pre>
       *
       * <code>optional int32 flowId = 15;</code>
       * @param value The flowId to set.
       * @return This builder for chaining.
       */
      public Builder setFlowId(int value) {
        bitField0_ |= 0x00004000;
        flowId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Alessandro Dolci
       * </pre>
       *
       * <code>optional int32 flowId = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlowId() {
        bitField0_ = (bitField0_ & ~0x00004000);
        flowId_ = 0;
        onChanged();
        return this;
      }

      private long dataType_ ;
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 16;</code>
       * @return Whether the dataType field is set.
       */
      public boolean hasDataType() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 16;</code>
       * @return The dataType.
       */
      public long getDataType() {
        return dataType_;
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 16;</code>
       * @param value The dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataType(long value) {
        bitField0_ |= 0x00008000;
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00008000);
        dataType_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes payload = 99;</code>
       * @return Whether the payload field is set.
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>required bytes payload = 99;</code>
       * @return The payload.
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <code>required bytes payload = 99;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes payload = 99;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00010000);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:UnicastPacket)
    }

    // @@protoc_insertion_point(class_scope:UnicastPacket)
    private static final UnicastPacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new UnicastPacket();
    }

    public static UnicastPacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<UnicastPacket>
        PARSER = new com.google.protobuf.AbstractParser<UnicastPacket>() {
      @Override
      public UnicastPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UnicastPacket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UnicastPacket> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<UnicastPacket> getParserForType() {
      return PARSER;
    }

    @Override
    public UnicastPacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BroadcastPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BroadcastPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>repeated int32 source = 2;</code>
     * @return A list containing the source.
     */
    java.util.List<Integer> getSourceList();
    /**
     * <code>repeated int32 source = 2;</code>
     * @return The count of source.
     */
    int getSourceCount();
    /**
     * <code>repeated int32 source = 2;</code>
     * @param index The index of the element to return.
     * @return The source at the given index.
     */
    int getSource(int index);

    /**
     * <code>repeated int32 traversedIds = 3;</code>
     * @return A list containing the traversedIds.
     */
    java.util.List<Integer> getTraversedIdsList();
    /**
     * <code>repeated int32 traversedIds = 3;</code>
     * @return The count of traversedIds.
     */
    int getTraversedIdsCount();
    /**
     * <code>repeated int32 traversedIds = 3;</code>
     * @param index The index of the element to return.
     * @return The traversedIds at the given index.
     */
    int getTraversedIds(int index);

    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 sourceNodeId = 4;</code>
     * @return Whether the sourceNodeId field is set.
     */
    boolean hasSourceNodeId();
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 sourceNodeId = 4;</code>
     * @return The sourceNodeId.
     */
    int getSourceNodeId();

    /**
     * <code>required int32 ttl = 5;</code>
     * @return Whether the ttl field is set.
     */
    boolean hasTtl();
    /**
     * <code>required int32 ttl = 5;</code>
     * @return The ttl.
     */
    int getTtl();

    /**
     * <code>required int32 destPort = 6;</code>
     * @return Whether the destPort field is set.
     */
    boolean hasDestPort();
    /**
     * <code>required int32 destPort = 6;</code>
     * @return The destPort.
     */
    int getDestPort();

    /**
     * <code>optional int32 expiry = 7;</code>
     * @return Whether the expiry field is set.
     */
    boolean hasExpiry();
    /**
     * <code>optional int32 expiry = 7;</code>
     * @return The expiry.
     */
    int getExpiry();

    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 8;</code>
     * @return Whether the dataType field is set.
     */
    boolean hasDataType();
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 8;</code>
     * @return The dataType.
     */
    long getDataType();

    /**
     * <code>required bytes payload = 99;</code>
     * @return Whether the payload field is set.
     */
    boolean hasPayload();
    /**
     * <code>required bytes payload = 99;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * <pre>
   * packet id 2
   * </pre>
   *
   * Protobuf type {@code BroadcastPacket}
   */
  public  static final class BroadcastPacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BroadcastPacket)
      BroadcastPacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BroadcastPacket.newBuilder() to construct.
    private BroadcastPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BroadcastPacket() {
      source_ = emptyIntList();
      traversedIds_ = emptyIntList();
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new BroadcastPacket();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BroadcastPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                source_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              source_.addInt(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                source_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                source_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                traversedIds_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              traversedIds_.addInt(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                traversedIds_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                traversedIds_.addInt(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              sourceNodeId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              ttl_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              destPort_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              expiry_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              dataType_ = input.readInt64();
              break;
            }
            case 794: {
              bitField0_ |= 0x00000040;
              payload_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          source_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          traversedIds_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_BroadcastPacket_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_BroadcastPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BroadcastPacket.class, Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 id = 1;</code>
     * @return The id.
     */
    public int getId() {
      return id_;
    }

    public static final int SOURCE_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList source_;
    /**
     * <code>repeated int32 source = 2;</code>
     * @return A list containing the source.
     */
    public java.util.List<Integer>
        getSourceList() {
      return source_;
    }
    /**
     * <code>repeated int32 source = 2;</code>
     * @return The count of source.
     */
    public int getSourceCount() {
      return source_.size();
    }
    /**
     * <code>repeated int32 source = 2;</code>
     * @param index The index of the element to return.
     * @return The source at the given index.
     */
    public int getSource(int index) {
      return source_.getInt(index);
    }

    public static final int TRAVERSEDIDS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList traversedIds_;
    /**
     * <code>repeated int32 traversedIds = 3;</code>
     * @return A list containing the traversedIds.
     */
    public java.util.List<Integer>
        getTraversedIdsList() {
      return traversedIds_;
    }
    /**
     * <code>repeated int32 traversedIds = 3;</code>
     * @return The count of traversedIds.
     */
    public int getTraversedIdsCount() {
      return traversedIds_.size();
    }
    /**
     * <code>repeated int32 traversedIds = 3;</code>
     * @param index The index of the element to return.
     * @return The traversedIds at the given index.
     */
    public int getTraversedIds(int index) {
      return traversedIds_.getInt(index);
    }

    public static final int SOURCENODEID_FIELD_NUMBER = 4;
    private int sourceNodeId_;
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 sourceNodeId = 4;</code>
     * @return Whether the sourceNodeId field is set.
     */
    public boolean hasSourceNodeId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * [default = 0];
     * </pre>
     *
     * <code>optional int32 sourceNodeId = 4;</code>
     * @return The sourceNodeId.
     */
    public int getSourceNodeId() {
      return sourceNodeId_;
    }

    public static final int TTL_FIELD_NUMBER = 5;
    private int ttl_;
    /**
     * <code>required int32 ttl = 5;</code>
     * @return Whether the ttl field is set.
     */
    public boolean hasTtl() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required int32 ttl = 5;</code>
     * @return The ttl.
     */
    public int getTtl() {
      return ttl_;
    }

    public static final int DESTPORT_FIELD_NUMBER = 6;
    private int destPort_;
    /**
     * <code>required int32 destPort = 6;</code>
     * @return Whether the destPort field is set.
     */
    public boolean hasDestPort() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required int32 destPort = 6;</code>
     * @return The destPort.
     */
    public int getDestPort() {
      return destPort_;
    }

    public static final int EXPIRY_FIELD_NUMBER = 7;
    private int expiry_;
    /**
     * <code>optional int32 expiry = 7;</code>
     * @return Whether the expiry field is set.
     */
    public boolean hasExpiry() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 expiry = 7;</code>
     * @return The expiry.
     */
    public int getExpiry() {
      return expiry_;
    }

    public static final int DATATYPE_FIELD_NUMBER = 8;
    private long dataType_;
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 8;</code>
     * @return Whether the dataType field is set.
     */
    public boolean hasDataType() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Dmitrij David Padalino Montenero
     * </pre>
     *
     * <code>optional int64 dataType = 8;</code>
     * @return The dataType.
     */
    public long getDataType() {
      return dataType_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 99;
    private com.google.protobuf.ByteString payload_;
    /**
     * <code>required bytes payload = 99;</code>
     * @return Whether the payload field is set.
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>required bytes payload = 99;</code>
     * @return The payload.
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTtl()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDestPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPayload()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < source_.size(); i++) {
        output.writeInt32(2, source_.getInt(i));
      }
      for (int i = 0; i < traversedIds_.size(); i++) {
        output.writeInt32(3, traversedIds_.getInt(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(4, sourceNodeId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(5, ttl_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(6, destPort_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(7, expiry_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt64(8, dataType_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBytes(99, payload_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < source_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(source_.getInt(i));
        }
        size += dataSize;
        size += 1 * getSourceList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < traversedIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(traversedIds_.getInt(i));
        }
        size += dataSize;
        size += 1 * getTraversedIdsList().size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sourceNodeId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, ttl_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, destPort_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, expiry_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, dataType_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(99, payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BroadcastPacket)) {
        return super.equals(obj);
      }
      BroadcastPacket other = (BroadcastPacket) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (!getSourceList()
          .equals(other.getSourceList())) return false;
      if (!getTraversedIdsList()
          .equals(other.getTraversedIdsList())) return false;
      if (hasSourceNodeId() != other.hasSourceNodeId()) return false;
      if (hasSourceNodeId()) {
        if (getSourceNodeId()
            != other.getSourceNodeId()) return false;
      }
      if (hasTtl() != other.hasTtl()) return false;
      if (hasTtl()) {
        if (getTtl()
            != other.getTtl()) return false;
      }
      if (hasDestPort() != other.hasDestPort()) return false;
      if (hasDestPort()) {
        if (getDestPort()
            != other.getDestPort()) return false;
      }
      if (hasExpiry() != other.hasExpiry()) return false;
      if (hasExpiry()) {
        if (getExpiry()
            != other.getExpiry()) return false;
      }
      if (hasDataType() != other.hasDataType()) return false;
      if (hasDataType()) {
        if (getDataType()
            != other.getDataType()) return false;
      }
      if (hasPayload() != other.hasPayload()) return false;
      if (hasPayload()) {
        if (!getPayload()
            .equals(other.getPayload())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (getSourceCount() > 0) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSourceList().hashCode();
      }
      if (getTraversedIdsCount() > 0) {
        hash = (37 * hash) + TRAVERSEDIDS_FIELD_NUMBER;
        hash = (53 * hash) + getTraversedIdsList().hashCode();
      }
      if (hasSourceNodeId()) {
        hash = (37 * hash) + SOURCENODEID_FIELD_NUMBER;
        hash = (53 * hash) + getSourceNodeId();
      }
      if (hasTtl()) {
        hash = (37 * hash) + TTL_FIELD_NUMBER;
        hash = (53 * hash) + getTtl();
      }
      if (hasDestPort()) {
        hash = (37 * hash) + DESTPORT_FIELD_NUMBER;
        hash = (53 * hash) + getDestPort();
      }
      if (hasExpiry()) {
        hash = (37 * hash) + EXPIRY_FIELD_NUMBER;
        hash = (53 * hash) + getExpiry();
      }
      if (hasDataType()) {
        hash = (37 * hash) + DATATYPE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDataType());
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BroadcastPacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BroadcastPacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BroadcastPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BroadcastPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BroadcastPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BroadcastPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BroadcastPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BroadcastPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BroadcastPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BroadcastPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BroadcastPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BroadcastPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BroadcastPacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 2
     * </pre>
     *
     * Protobuf type {@code BroadcastPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BroadcastPacket)
        BroadcastPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_BroadcastPacket_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_BroadcastPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BroadcastPacket.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.BroadcastPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        source_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        traversedIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        sourceNodeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        ttl_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        destPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        expiry_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        dataType_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        payload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_BroadcastPacket_descriptor;
      }

      @Override
      public BroadcastPacket getDefaultInstanceForType() {
        return BroadcastPacket.getDefaultInstance();
      }

      @Override
      public BroadcastPacket build() {
        BroadcastPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public BroadcastPacket buildPartial() {
        BroadcastPacket result = new BroadcastPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          source_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.source_ = source_;
        if (((bitField0_ & 0x00000004) != 0)) {
          traversedIds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.traversedIds_ = traversedIds_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.sourceNodeId_ = sourceNodeId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ttl_ = ttl_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.destPort_ = destPort_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.expiry_ = expiry_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.dataType_ = dataType_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.payload_ = payload_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BroadcastPacket) {
          return mergeFrom((BroadcastPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BroadcastPacket other) {
        if (other == BroadcastPacket.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (!other.source_.isEmpty()) {
          if (source_.isEmpty()) {
            source_ = other.source_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSourceIsMutable();
            source_.addAll(other.source_);
          }
          onChanged();
        }
        if (!other.traversedIds_.isEmpty()) {
          if (traversedIds_.isEmpty()) {
            traversedIds_ = other.traversedIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTraversedIdsIsMutable();
            traversedIds_.addAll(other.traversedIds_);
          }
          onChanged();
        }
        if (other.hasSourceNodeId()) {
          setSourceNodeId(other.getSourceNodeId());
        }
        if (other.hasTtl()) {
          setTtl(other.getTtl());
        }
        if (other.hasDestPort()) {
          setDestPort(other.getDestPort());
        }
        if (other.hasExpiry()) {
          setExpiry(other.getExpiry());
        }
        if (other.hasDataType()) {
          setDataType(other.getDataType());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasId()) {
          return false;
        }
        if (!hasTtl()) {
          return false;
        }
        if (!hasDestPort()) {
          return false;
        }
        if (!hasPayload()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BroadcastPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BroadcastPacket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return The id.
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList source_ = emptyIntList();
      private void ensureSourceIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          source_ = mutableCopy(source_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 source = 2;</code>
       * @return A list containing the source.
       */
      public java.util.List<Integer>
          getSourceList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(source_) : source_;
      }
      /**
       * <code>repeated int32 source = 2;</code>
       * @return The count of source.
       */
      public int getSourceCount() {
        return source_.size();
      }
      /**
       * <code>repeated int32 source = 2;</code>
       * @param index The index of the element to return.
       * @return The source at the given index.
       */
      public int getSource(int index) {
        return source_.getInt(index);
      }
      /**
       * <code>repeated int32 source = 2;</code>
       * @param index The index to set the value at.
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          int index, int value) {
        ensureSourceIsMutable();
        source_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 2;</code>
       * @param value The source to add.
       * @return This builder for chaining.
       */
      public Builder addSource(int value) {
        ensureSourceIsMutable();
        source_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 2;</code>
       * @param values The source to add.
       * @return This builder for chaining.
       */
      public Builder addAllSource(
          Iterable<? extends Integer> values) {
        ensureSourceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, source_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 source = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        source_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList traversedIds_ = emptyIntList();
      private void ensureTraversedIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          traversedIds_ = mutableCopy(traversedIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 traversedIds = 3;</code>
       * @return A list containing the traversedIds.
       */
      public java.util.List<Integer>
          getTraversedIdsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(traversedIds_) : traversedIds_;
      }
      /**
       * <code>repeated int32 traversedIds = 3;</code>
       * @return The count of traversedIds.
       */
      public int getTraversedIdsCount() {
        return traversedIds_.size();
      }
      /**
       * <code>repeated int32 traversedIds = 3;</code>
       * @param index The index of the element to return.
       * @return The traversedIds at the given index.
       */
      public int getTraversedIds(int index) {
        return traversedIds_.getInt(index);
      }
      /**
       * <code>repeated int32 traversedIds = 3;</code>
       * @param index The index to set the value at.
       * @param value The traversedIds to set.
       * @return This builder for chaining.
       */
      public Builder setTraversedIds(
          int index, int value) {
        ensureTraversedIdsIsMutable();
        traversedIds_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 traversedIds = 3;</code>
       * @param value The traversedIds to add.
       * @return This builder for chaining.
       */
      public Builder addTraversedIds(int value) {
        ensureTraversedIdsIsMutable();
        traversedIds_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 traversedIds = 3;</code>
       * @param values The traversedIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllTraversedIds(
          Iterable<? extends Integer> values) {
        ensureTraversedIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, traversedIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 traversedIds = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTraversedIds() {
        traversedIds_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int sourceNodeId_ ;
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 sourceNodeId = 4;</code>
       * @return Whether the sourceNodeId field is set.
       */
      public boolean hasSourceNodeId() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 sourceNodeId = 4;</code>
       * @return The sourceNodeId.
       */
      public int getSourceNodeId() {
        return sourceNodeId_;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 sourceNodeId = 4;</code>
       * @param value The sourceNodeId to set.
       * @return This builder for chaining.
       */
      public Builder setSourceNodeId(int value) {
        bitField0_ |= 0x00000008;
        sourceNodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [default = 0];
       * </pre>
       *
       * <code>optional int32 sourceNodeId = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceNodeId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sourceNodeId_ = 0;
        onChanged();
        return this;
      }

      private int ttl_ ;
      /**
       * <code>required int32 ttl = 5;</code>
       * @return Whether the ttl field is set.
       */
      public boolean hasTtl() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>required int32 ttl = 5;</code>
       * @return The ttl.
       */
      public int getTtl() {
        return ttl_;
      }
      /**
       * <code>required int32 ttl = 5;</code>
       * @param value The ttl to set.
       * @return This builder for chaining.
       */
      public Builder setTtl(int value) {
        bitField0_ |= 0x00000010;
        ttl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ttl = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTtl() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ttl_ = 0;
        onChanged();
        return this;
      }

      private int destPort_ ;
      /**
       * <code>required int32 destPort = 6;</code>
       * @return Whether the destPort field is set.
       */
      public boolean hasDestPort() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>required int32 destPort = 6;</code>
       * @return The destPort.
       */
      public int getDestPort() {
        return destPort_;
      }
      /**
       * <code>required int32 destPort = 6;</code>
       * @param value The destPort to set.
       * @return This builder for chaining.
       */
      public Builder setDestPort(int value) {
        bitField0_ |= 0x00000020;
        destPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 destPort = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDestPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        destPort_ = 0;
        onChanged();
        return this;
      }

      private int expiry_ ;
      /**
       * <code>optional int32 expiry = 7;</code>
       * @return Whether the expiry field is set.
       */
      public boolean hasExpiry() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int32 expiry = 7;</code>
       * @return The expiry.
       */
      public int getExpiry() {
        return expiry_;
      }
      /**
       * <code>optional int32 expiry = 7;</code>
       * @param value The expiry to set.
       * @return This builder for chaining.
       */
      public Builder setExpiry(int value) {
        bitField0_ |= 0x00000040;
        expiry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 expiry = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpiry() {
        bitField0_ = (bitField0_ & ~0x00000040);
        expiry_ = 0;
        onChanged();
        return this;
      }

      private long dataType_ ;
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 8;</code>
       * @return Whether the dataType field is set.
       */
      public boolean hasDataType() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 8;</code>
       * @return The dataType.
       */
      public long getDataType() {
        return dataType_;
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 8;</code>
       * @param value The dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataType(long value) {
        bitField0_ |= 0x00000080;
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dmitrij David Padalino Montenero
       * </pre>
       *
       * <code>optional int64 dataType = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataType() {
        bitField0_ = (bitField0_ & ~0x00000080);
        dataType_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes payload = 99;</code>
       * @return Whether the payload field is set.
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>required bytes payload = 99;</code>
       * @return The payload.
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <code>required bytes payload = 99;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes payload = 99;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000100);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BroadcastPacket)
    }

    // @@protoc_insertion_point(class_scope:BroadcastPacket)
    private static final BroadcastPacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BroadcastPacket();
    }

    public static BroadcastPacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<BroadcastPacket>
        PARSER = new com.google.protobuf.AbstractParser<BroadcastPacket>() {
      @Override
      public BroadcastPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BroadcastPacket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BroadcastPacket> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BroadcastPacket> getParserForType() {
      return PARSER;
    }

    @Override
    public BroadcastPacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptedPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EncryptedPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 ernId = 1;</code>
     * @return Whether the ernId field is set.
     */
    boolean hasErnId();
    /**
     * <code>required int32 ernId = 1;</code>
     * @return The ernId.
     */
    int getErnId();

    /**
     * <code>required int32 eskId = 2;</code>
     * @return Whether the eskId field is set.
     */
    boolean hasEskId();
    /**
     * <code>required int32 eskId = 2;</code>
     * @return The eskId.
     */
    int getEskId();

    /**
     * <code>required bytes encryptedPayload = 3;</code>
     * @return Whether the encryptedPayload field is set.
     */
    boolean hasEncryptedPayload();
    /**
     * <code>required bytes encryptedPayload = 3;</code>
     * @return The encryptedPayload.
     */
    com.google.protobuf.ByteString getEncryptedPayload();

    /**
     * <code>required int32 encryptedBytes = 4;</code>
     * @return Whether the encryptedBytes field is set.
     */
    boolean hasEncryptedBytes();
    /**
     * <code>required int32 encryptedBytes = 4;</code>
     * @return The encryptedBytes.
     */
    int getEncryptedBytes();
  }
  /**
   * <pre>
   * packet id 6
   * </pre>
   *
   * Protobuf type {@code EncryptedPacket}
   */
  public  static final class EncryptedPacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EncryptedPacket)
      EncryptedPacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptedPacket.newBuilder() to construct.
    private EncryptedPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptedPacket() {
      encryptedPayload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncryptedPacket();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptedPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              ernId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              eskId_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              encryptedPayload_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              encryptedBytes_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_EncryptedPacket_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_EncryptedPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EncryptedPacket.class, Builder.class);
    }

    private int bitField0_;
    public static final int ERNID_FIELD_NUMBER = 1;
    private int ernId_;
    /**
     * <code>required int32 ernId = 1;</code>
     * @return Whether the ernId field is set.
     */
    public boolean hasErnId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 ernId = 1;</code>
     * @return The ernId.
     */
    public int getErnId() {
      return ernId_;
    }

    public static final int ESKID_FIELD_NUMBER = 2;
    private int eskId_;
    /**
     * <code>required int32 eskId = 2;</code>
     * @return Whether the eskId field is set.
     */
    public boolean hasEskId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 eskId = 2;</code>
     * @return The eskId.
     */
    public int getEskId() {
      return eskId_;
    }

    public static final int ENCRYPTEDPAYLOAD_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString encryptedPayload_;
    /**
     * <code>required bytes encryptedPayload = 3;</code>
     * @return Whether the encryptedPayload field is set.
     */
    public boolean hasEncryptedPayload() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required bytes encryptedPayload = 3;</code>
     * @return The encryptedPayload.
     */
    public com.google.protobuf.ByteString getEncryptedPayload() {
      return encryptedPayload_;
    }

    public static final int ENCRYPTEDBYTES_FIELD_NUMBER = 4;
    private int encryptedBytes_;
    /**
     * <code>required int32 encryptedBytes = 4;</code>
     * @return Whether the encryptedBytes field is set.
     */
    public boolean hasEncryptedBytes() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required int32 encryptedBytes = 4;</code>
     * @return The encryptedBytes.
     */
    public int getEncryptedBytes() {
      return encryptedBytes_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasErnId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEskId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncryptedPayload()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEncryptedBytes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, ernId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, eskId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(3, encryptedPayload_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, encryptedBytes_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ernId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, eskId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, encryptedPayload_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, encryptedBytes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EncryptedPacket)) {
        return super.equals(obj);
      }
      EncryptedPacket other = (EncryptedPacket) obj;

      if (hasErnId() != other.hasErnId()) return false;
      if (hasErnId()) {
        if (getErnId()
            != other.getErnId()) return false;
      }
      if (hasEskId() != other.hasEskId()) return false;
      if (hasEskId()) {
        if (getEskId()
            != other.getEskId()) return false;
      }
      if (hasEncryptedPayload() != other.hasEncryptedPayload()) return false;
      if (hasEncryptedPayload()) {
        if (!getEncryptedPayload()
            .equals(other.getEncryptedPayload())) return false;
      }
      if (hasEncryptedBytes() != other.hasEncryptedBytes()) return false;
      if (hasEncryptedBytes()) {
        if (getEncryptedBytes()
            != other.getEncryptedBytes()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasErnId()) {
        hash = (37 * hash) + ERNID_FIELD_NUMBER;
        hash = (53 * hash) + getErnId();
      }
      if (hasEskId()) {
        hash = (37 * hash) + ESKID_FIELD_NUMBER;
        hash = (53 * hash) + getEskId();
      }
      if (hasEncryptedPayload()) {
        hash = (37 * hash) + ENCRYPTEDPAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptedPayload().hashCode();
      }
      if (hasEncryptedBytes()) {
        hash = (37 * hash) + ENCRYPTEDBYTES_FIELD_NUMBER;
        hash = (53 * hash) + getEncryptedBytes();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EncryptedPacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptedPacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptedPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptedPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptedPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptedPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptedPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EncryptedPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EncryptedPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EncryptedPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EncryptedPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EncryptedPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EncryptedPacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 6
     * </pre>
     *
     * Protobuf type {@code EncryptedPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EncryptedPacket)
        EncryptedPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_EncryptedPacket_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_EncryptedPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EncryptedPacket.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.EncryptedPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        ernId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eskId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        encryptedPayload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        encryptedBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_EncryptedPacket_descriptor;
      }

      @Override
      public EncryptedPacket getDefaultInstanceForType() {
        return EncryptedPacket.getDefaultInstance();
      }

      @Override
      public EncryptedPacket build() {
        EncryptedPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public EncryptedPacket buildPartial() {
        EncryptedPacket result = new EncryptedPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ernId_ = ernId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.eskId_ = eskId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.encryptedPayload_ = encryptedPayload_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.encryptedBytes_ = encryptedBytes_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EncryptedPacket) {
          return mergeFrom((EncryptedPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EncryptedPacket other) {
        if (other == EncryptedPacket.getDefaultInstance()) return this;
        if (other.hasErnId()) {
          setErnId(other.getErnId());
        }
        if (other.hasEskId()) {
          setEskId(other.getEskId());
        }
        if (other.hasEncryptedPayload()) {
          setEncryptedPayload(other.getEncryptedPayload());
        }
        if (other.hasEncryptedBytes()) {
          setEncryptedBytes(other.getEncryptedBytes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasErnId()) {
          return false;
        }
        if (!hasEskId()) {
          return false;
        }
        if (!hasEncryptedPayload()) {
          return false;
        }
        if (!hasEncryptedBytes()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EncryptedPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EncryptedPacket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ernId_ ;
      /**
       * <code>required int32 ernId = 1;</code>
       * @return Whether the ernId field is set.
       */
      public boolean hasErnId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @return The ernId.
       */
      public int getErnId() {
        return ernId_;
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @param value The ernId to set.
       * @return This builder for chaining.
       */
      public Builder setErnId(int value) {
        bitField0_ |= 0x00000001;
        ernId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearErnId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ernId_ = 0;
        onChanged();
        return this;
      }

      private int eskId_ ;
      /**
       * <code>required int32 eskId = 2;</code>
       * @return Whether the eskId field is set.
       */
      public boolean hasEskId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 eskId = 2;</code>
       * @return The eskId.
       */
      public int getEskId() {
        return eskId_;
      }
      /**
       * <code>required int32 eskId = 2;</code>
       * @param value The eskId to set.
       * @return This builder for chaining.
       */
      public Builder setEskId(int value) {
        bitField0_ |= 0x00000002;
        eskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 eskId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEskId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eskId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString encryptedPayload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes encryptedPayload = 3;</code>
       * @return Whether the encryptedPayload field is set.
       */
      public boolean hasEncryptedPayload() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required bytes encryptedPayload = 3;</code>
       * @return The encryptedPayload.
       */
      public com.google.protobuf.ByteString getEncryptedPayload() {
        return encryptedPayload_;
      }
      /**
       * <code>required bytes encryptedPayload = 3;</code>
       * @param value The encryptedPayload to set.
       * @return This builder for chaining.
       */
      public Builder setEncryptedPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        encryptedPayload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes encryptedPayload = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncryptedPayload() {
        bitField0_ = (bitField0_ & ~0x00000004);
        encryptedPayload_ = getDefaultInstance().getEncryptedPayload();
        onChanged();
        return this;
      }

      private int encryptedBytes_ ;
      /**
       * <code>required int32 encryptedBytes = 4;</code>
       * @return Whether the encryptedBytes field is set.
       */
      public boolean hasEncryptedBytes() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required int32 encryptedBytes = 4;</code>
       * @return The encryptedBytes.
       */
      public int getEncryptedBytes() {
        return encryptedBytes_;
      }
      /**
       * <code>required int32 encryptedBytes = 4;</code>
       * @param value The encryptedBytes to set.
       * @return This builder for chaining.
       */
      public Builder setEncryptedBytes(int value) {
        bitField0_ |= 0x00000008;
        encryptedBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 encryptedBytes = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncryptedBytes() {
        bitField0_ = (bitField0_ & ~0x00000008);
        encryptedBytes_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EncryptedPacket)
    }

    // @@protoc_insertion_point(class_scope:EncryptedPacket)
    private static final EncryptedPacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EncryptedPacket();
    }

    public static EncryptedPacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<EncryptedPacket>
        PARSER = new com.google.protobuf.AbstractParser<EncryptedPacket>() {
      @Override
      public EncryptedPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptedPacket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptedPacket> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<EncryptedPacket> getParserForType() {
      return PARSER;
    }

    @Override
    public EncryptedPacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignedPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SignedPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 ernId = 1;</code>
     * @return Whether the ernId field is set.
     */
    boolean hasErnId();
    /**
     * <code>required int32 ernId = 1;</code>
     * @return The ernId.
     */
    int getErnId();

    /**
     * <code>required int32 eskId = 2;</code>
     * @return Whether the eskId field is set.
     */
    boolean hasEskId();
    /**
     * <code>required int32 eskId = 2;</code>
     * @return The eskId.
     */
    int getEskId();

    /**
     * <code>required bytes payload = 3;</code>
     * @return Whether the payload field is set.
     */
    boolean hasPayload();
    /**
     * <code>required bytes payload = 3;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();

    /**
     * <code>required bytes signature = 4;</code>
     * @return Whether the signature field is set.
     */
    boolean hasSignature();
    /**
     * <code>required bytes signature = 4;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <code>required int32 signedBytes = 5;</code>
     * @return Whether the signedBytes field is set.
     */
    boolean hasSignedBytes();
    /**
     * <code>required int32 signedBytes = 5;</code>
     * @return The signedBytes.
     */
    int getSignedBytes();
  }
  /**
   * <pre>
   * packet id 7
   * </pre>
   *
   * Protobuf type {@code SignedPacket}
   */
  public  static final class SignedPacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SignedPacket)
      SignedPacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignedPacket.newBuilder() to construct.
    private SignedPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignedPacket() {
      payload_ = com.google.protobuf.ByteString.EMPTY;
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new SignedPacket();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignedPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              ernId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              eskId_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              payload_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              signature_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              signedBytes_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_SignedPacket_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_SignedPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SignedPacket.class, Builder.class);
    }

    private int bitField0_;
    public static final int ERNID_FIELD_NUMBER = 1;
    private int ernId_;
    /**
     * <code>required int32 ernId = 1;</code>
     * @return Whether the ernId field is set.
     */
    public boolean hasErnId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 ernId = 1;</code>
     * @return The ernId.
     */
    public int getErnId() {
      return ernId_;
    }

    public static final int ESKID_FIELD_NUMBER = 2;
    private int eskId_;
    /**
     * <code>required int32 eskId = 2;</code>
     * @return Whether the eskId field is set.
     */
    public boolean hasEskId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int32 eskId = 2;</code>
     * @return The eskId.
     */
    public int getEskId() {
      return eskId_;
    }

    public static final int PAYLOAD_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString payload_;
    /**
     * <code>required bytes payload = 3;</code>
     * @return Whether the payload field is set.
     */
    public boolean hasPayload() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required bytes payload = 3;</code>
     * @return The payload.
     */
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    public static final int SIGNATURE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>required bytes signature = 4;</code>
     * @return Whether the signature field is set.
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required bytes signature = 4;</code>
     * @return The signature.
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    public static final int SIGNEDBYTES_FIELD_NUMBER = 5;
    private int signedBytes_;
    /**
     * <code>required int32 signedBytes = 5;</code>
     * @return Whether the signedBytes field is set.
     */
    public boolean hasSignedBytes() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>required int32 signedBytes = 5;</code>
     * @return The signedBytes.
     */
    public int getSignedBytes() {
      return signedBytes_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasErnId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEskId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPayload()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignature()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSignedBytes()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, ernId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, eskId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(3, payload_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(4, signature_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, signedBytes_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ernId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, eskId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, payload_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, signature_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, signedBytes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SignedPacket)) {
        return super.equals(obj);
      }
      SignedPacket other = (SignedPacket) obj;

      if (hasErnId() != other.hasErnId()) return false;
      if (hasErnId()) {
        if (getErnId()
            != other.getErnId()) return false;
      }
      if (hasEskId() != other.hasEskId()) return false;
      if (hasEskId()) {
        if (getEskId()
            != other.getEskId()) return false;
      }
      if (hasPayload() != other.hasPayload()) return false;
      if (hasPayload()) {
        if (!getPayload()
            .equals(other.getPayload())) return false;
      }
      if (hasSignature() != other.hasSignature()) return false;
      if (hasSignature()) {
        if (!getSignature()
            .equals(other.getSignature())) return false;
      }
      if (hasSignedBytes() != other.hasSignedBytes()) return false;
      if (hasSignedBytes()) {
        if (getSignedBytes()
            != other.getSignedBytes()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasErnId()) {
        hash = (37 * hash) + ERNID_FIELD_NUMBER;
        hash = (53 * hash) + getErnId();
      }
      if (hasEskId()) {
        hash = (37 * hash) + ESKID_FIELD_NUMBER;
        hash = (53 * hash) + getEskId();
      }
      if (hasPayload()) {
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
      }
      if (hasSignature()) {
        hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
        hash = (53 * hash) + getSignature().hashCode();
      }
      if (hasSignedBytes()) {
        hash = (37 * hash) + SIGNEDBYTES_FIELD_NUMBER;
        hash = (53 * hash) + getSignedBytes();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SignedPacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignedPacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignedPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignedPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignedPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SignedPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SignedPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SignedPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static SignedPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static SignedPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SignedPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static SignedPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SignedPacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 7
     * </pre>
     *
     * Protobuf type {@code SignedPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SignedPacket)
        SignedPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_SignedPacket_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_SignedPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SignedPacket.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.SignedPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        ernId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eskId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        payload_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        signedBytes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_SignedPacket_descriptor;
      }

      @Override
      public SignedPacket getDefaultInstanceForType() {
        return SignedPacket.getDefaultInstance();
      }

      @Override
      public SignedPacket build() {
        SignedPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SignedPacket buildPartial() {
        SignedPacket result = new SignedPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ernId_ = ernId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.eskId_ = eskId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.payload_ = payload_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.signature_ = signature_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.signedBytes_ = signedBytes_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SignedPacket) {
          return mergeFrom((SignedPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SignedPacket other) {
        if (other == SignedPacket.getDefaultInstance()) return this;
        if (other.hasErnId()) {
          setErnId(other.getErnId());
        }
        if (other.hasEskId()) {
          setEskId(other.getEskId());
        }
        if (other.hasPayload()) {
          setPayload(other.getPayload());
        }
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        if (other.hasSignedBytes()) {
          setSignedBytes(other.getSignedBytes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasErnId()) {
          return false;
        }
        if (!hasEskId()) {
          return false;
        }
        if (!hasPayload()) {
          return false;
        }
        if (!hasSignature()) {
          return false;
        }
        if (!hasSignedBytes()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        SignedPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (SignedPacket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ernId_ ;
      /**
       * <code>required int32 ernId = 1;</code>
       * @return Whether the ernId field is set.
       */
      public boolean hasErnId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @return The ernId.
       */
      public int getErnId() {
        return ernId_;
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @param value The ernId to set.
       * @return This builder for chaining.
       */
      public Builder setErnId(int value) {
        bitField0_ |= 0x00000001;
        ernId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearErnId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ernId_ = 0;
        onChanged();
        return this;
      }

      private int eskId_ ;
      /**
       * <code>required int32 eskId = 2;</code>
       * @return Whether the eskId field is set.
       */
      public boolean hasEskId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int32 eskId = 2;</code>
       * @return The eskId.
       */
      public int getEskId() {
        return eskId_;
      }
      /**
       * <code>required int32 eskId = 2;</code>
       * @param value The eskId to set.
       * @return This builder for chaining.
       */
      public Builder setEskId(int value) {
        bitField0_ |= 0x00000002;
        eskId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 eskId = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEskId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eskId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes payload = 3;</code>
       * @return Whether the payload field is set.
       */
      public boolean hasPayload() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required bytes payload = 3;</code>
       * @return The payload.
       */
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <code>required bytes payload = 3;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes payload = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        bitField0_ = (bitField0_ & ~0x00000004);
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes signature = 4;</code>
       * @return Whether the signature field is set.
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required bytes signature = 4;</code>
       * @return The signature.
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>required bytes signature = 4;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes signature = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000008);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      private int signedBytes_ ;
      /**
       * <code>required int32 signedBytes = 5;</code>
       * @return Whether the signedBytes field is set.
       */
      public boolean hasSignedBytes() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>required int32 signedBytes = 5;</code>
       * @return The signedBytes.
       */
      public int getSignedBytes() {
        return signedBytes_;
      }
      /**
       * <code>required int32 signedBytes = 5;</code>
       * @param value The signedBytes to set.
       * @return This builder for chaining.
       */
      public Builder setSignedBytes(int value) {
        bitField0_ |= 0x00000010;
        signedBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 signedBytes = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignedBytes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        signedBytes_ = 0;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SignedPacket)
    }

    // @@protoc_insertion_point(class_scope:SignedPacket)
    private static final SignedPacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SignedPacket();
    }

    public static SignedPacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<SignedPacket>
        PARSER = new com.google.protobuf.AbstractParser<SignedPacket>() {
      @Override
      public SignedPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignedPacket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignedPacket> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SignedPacket> getParserForType() {
      return PARSER;
    }

    @Override
    public SignedPacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EncryptedEskAndRinsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EncryptedEskAndRins)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 ernId = 1;</code>
     * @return Whether the ernId field is set.
     */
    boolean hasErnId();
    /**
     * <code>required int32 ernId = 1;</code>
     * @return The ernId.
     */
    int getErnId();

    /**
     * <code>required bytes connectedRins = 2;</code>
     * @return Whether the connectedRins field is set.
     */
    boolean hasConnectedRins();
    /**
     * <code>required bytes connectedRins = 2;</code>
     * @return The connectedRins.
     */
    com.google.protobuf.ByteString getConnectedRins();

    /**
     * <code>required bytes oldKey = 3;</code>
     * @return Whether the oldKey field is set.
     */
    boolean hasOldKey();
    /**
     * <code>required bytes oldKey = 3;</code>
     * @return The oldKey.
     */
    com.google.protobuf.ByteString getOldKey();

    /**
     * <code>required bytes newKey = 4;</code>
     * @return Whether the newKey field is set.
     */
    boolean hasNewKey();
    /**
     * <code>required bytes newKey = 4;</code>
     * @return The newKey.
     */
    com.google.protobuf.ByteString getNewKey();

    /**
     * <pre>
     * SocialRelationship.TYPE_UNDEFINED
     * </pre>
     *
     * <code>optional int32 socialRelationshipType = 5 [default = 0];</code>
     * @return Whether the socialRelationshipType field is set.
     */
    boolean hasSocialRelationshipType();
    /**
     * <pre>
     * SocialRelationship.TYPE_UNDEFINED
     * </pre>
     *
     * <code>optional int32 socialRelationshipType = 5 [default = 0];</code>
     * @return The socialRelationshipType.
     */
    int getSocialRelationshipType();

    /**
     * <code>optional bytes ernManagerFriendId = 6;</code>
     * @return Whether the ernManagerFriendId field is set.
     */
    boolean hasErnManagerFriendId();
    /**
     * <code>optional bytes ernManagerFriendId = 6;</code>
     * @return The ernManagerFriendId.
     */
    com.google.protobuf.ByteString getErnManagerFriendId();

    /**
     * <code>optional bytes connectorFriendId = 7;</code>
     * @return Whether the connectorFriendId field is set.
     */
    boolean hasConnectorFriendId();
    /**
     * <code>optional bytes connectorFriendId = 7;</code>
     * @return The connectorFriendId.
     */
    com.google.protobuf.ByteString getConnectorFriendId();
  }
  /**
   * <pre>
   * packet id 8
   * </pre>
   *
   * Protobuf type {@code EncryptedEskAndRins}
   */
  public  static final class EncryptedEskAndRins extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EncryptedEskAndRins)
      EncryptedEskAndRinsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EncryptedEskAndRins.newBuilder() to construct.
    private EncryptedEskAndRins(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EncryptedEskAndRins() {
      connectedRins_ = com.google.protobuf.ByteString.EMPTY;
      oldKey_ = com.google.protobuf.ByteString.EMPTY;
      newKey_ = com.google.protobuf.ByteString.EMPTY;
      ernManagerFriendId_ = com.google.protobuf.ByteString.EMPTY;
      connectorFriendId_ = com.google.protobuf.ByteString.EMPTY;
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new EncryptedEskAndRins();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EncryptedEskAndRins(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              ernId_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              connectedRins_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              oldKey_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              newKey_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              socialRelationshipType_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              ernManagerFriendId_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              connectorFriendId_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_EncryptedEskAndRins_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_EncryptedEskAndRins_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              EncryptedEskAndRins.class, Builder.class);
    }

    private int bitField0_;
    public static final int ERNID_FIELD_NUMBER = 1;
    private int ernId_;
    /**
     * <code>required int32 ernId = 1;</code>
     * @return Whether the ernId field is set.
     */
    public boolean hasErnId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 ernId = 1;</code>
     * @return The ernId.
     */
    public int getErnId() {
      return ernId_;
    }

    public static final int CONNECTEDRINS_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString connectedRins_;
    /**
     * <code>required bytes connectedRins = 2;</code>
     * @return Whether the connectedRins field is set.
     */
    public boolean hasConnectedRins() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required bytes connectedRins = 2;</code>
     * @return The connectedRins.
     */
    public com.google.protobuf.ByteString getConnectedRins() {
      return connectedRins_;
    }

    public static final int OLDKEY_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString oldKey_;
    /**
     * <code>required bytes oldKey = 3;</code>
     * @return Whether the oldKey field is set.
     */
    public boolean hasOldKey() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required bytes oldKey = 3;</code>
     * @return The oldKey.
     */
    public com.google.protobuf.ByteString getOldKey() {
      return oldKey_;
    }

    public static final int NEWKEY_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString newKey_;
    /**
     * <code>required bytes newKey = 4;</code>
     * @return Whether the newKey field is set.
     */
    public boolean hasNewKey() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required bytes newKey = 4;</code>
     * @return The newKey.
     */
    public com.google.protobuf.ByteString getNewKey() {
      return newKey_;
    }

    public static final int SOCIALRELATIONSHIPTYPE_FIELD_NUMBER = 5;
    private int socialRelationshipType_;
    /**
     * <pre>
     * SocialRelationship.TYPE_UNDEFINED
     * </pre>
     *
     * <code>optional int32 socialRelationshipType = 5 [default = 0];</code>
     * @return Whether the socialRelationshipType field is set.
     */
    public boolean hasSocialRelationshipType() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * SocialRelationship.TYPE_UNDEFINED
     * </pre>
     *
     * <code>optional int32 socialRelationshipType = 5 [default = 0];</code>
     * @return The socialRelationshipType.
     */
    public int getSocialRelationshipType() {
      return socialRelationshipType_;
    }

    public static final int ERNMANAGERFRIENDID_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString ernManagerFriendId_;
    /**
     * <code>optional bytes ernManagerFriendId = 6;</code>
     * @return Whether the ernManagerFriendId field is set.
     */
    public boolean hasErnManagerFriendId() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional bytes ernManagerFriendId = 6;</code>
     * @return The ernManagerFriendId.
     */
    public com.google.protobuf.ByteString getErnManagerFriendId() {
      return ernManagerFriendId_;
    }

    public static final int CONNECTORFRIENDID_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString connectorFriendId_;
    /**
     * <code>optional bytes connectorFriendId = 7;</code>
     * @return Whether the connectorFriendId field is set.
     */
    public boolean hasConnectorFriendId() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional bytes connectorFriendId = 7;</code>
     * @return The connectorFriendId.
     */
    public com.google.protobuf.ByteString getConnectorFriendId() {
      return connectorFriendId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasErnId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasConnectedRins()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOldKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNewKey()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, ernId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBytes(2, connectedRins_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(3, oldKey_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBytes(4, newKey_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, socialRelationshipType_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBytes(6, ernManagerFriendId_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeBytes(7, connectorFriendId_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, ernId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, connectedRins_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, oldKey_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, newKey_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, socialRelationshipType_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, ernManagerFriendId_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, connectorFriendId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof EncryptedEskAndRins)) {
        return super.equals(obj);
      }
      EncryptedEskAndRins other = (EncryptedEskAndRins) obj;

      if (hasErnId() != other.hasErnId()) return false;
      if (hasErnId()) {
        if (getErnId()
            != other.getErnId()) return false;
      }
      if (hasConnectedRins() != other.hasConnectedRins()) return false;
      if (hasConnectedRins()) {
        if (!getConnectedRins()
            .equals(other.getConnectedRins())) return false;
      }
      if (hasOldKey() != other.hasOldKey()) return false;
      if (hasOldKey()) {
        if (!getOldKey()
            .equals(other.getOldKey())) return false;
      }
      if (hasNewKey() != other.hasNewKey()) return false;
      if (hasNewKey()) {
        if (!getNewKey()
            .equals(other.getNewKey())) return false;
      }
      if (hasSocialRelationshipType() != other.hasSocialRelationshipType()) return false;
      if (hasSocialRelationshipType()) {
        if (getSocialRelationshipType()
            != other.getSocialRelationshipType()) return false;
      }
      if (hasErnManagerFriendId() != other.hasErnManagerFriendId()) return false;
      if (hasErnManagerFriendId()) {
        if (!getErnManagerFriendId()
            .equals(other.getErnManagerFriendId())) return false;
      }
      if (hasConnectorFriendId() != other.hasConnectorFriendId()) return false;
      if (hasConnectorFriendId()) {
        if (!getConnectorFriendId()
            .equals(other.getConnectorFriendId())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasErnId()) {
        hash = (37 * hash) + ERNID_FIELD_NUMBER;
        hash = (53 * hash) + getErnId();
      }
      if (hasConnectedRins()) {
        hash = (37 * hash) + CONNECTEDRINS_FIELD_NUMBER;
        hash = (53 * hash) + getConnectedRins().hashCode();
      }
      if (hasOldKey()) {
        hash = (37 * hash) + OLDKEY_FIELD_NUMBER;
        hash = (53 * hash) + getOldKey().hashCode();
      }
      if (hasNewKey()) {
        hash = (37 * hash) + NEWKEY_FIELD_NUMBER;
        hash = (53 * hash) + getNewKey().hashCode();
      }
      if (hasSocialRelationshipType()) {
        hash = (37 * hash) + SOCIALRELATIONSHIPTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSocialRelationshipType();
      }
      if (hasErnManagerFriendId()) {
        hash = (37 * hash) + ERNMANAGERFRIENDID_FIELD_NUMBER;
        hash = (53 * hash) + getErnManagerFriendId().hashCode();
      }
      if (hasConnectorFriendId()) {
        hash = (37 * hash) + CONNECTORFRIENDID_FIELD_NUMBER;
        hash = (53 * hash) + getConnectorFriendId().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static EncryptedEskAndRins parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptedEskAndRins parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptedEskAndRins parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptedEskAndRins parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptedEskAndRins parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static EncryptedEskAndRins parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static EncryptedEskAndRins parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EncryptedEskAndRins parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static EncryptedEskAndRins parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static EncryptedEskAndRins parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static EncryptedEskAndRins parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static EncryptedEskAndRins parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(EncryptedEskAndRins prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 8
     * </pre>
     *
     * Protobuf type {@code EncryptedEskAndRins}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EncryptedEskAndRins)
        EncryptedEskAndRinsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_EncryptedEskAndRins_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_EncryptedEskAndRins_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                EncryptedEskAndRins.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.EncryptedEskAndRins.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        ernId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        connectedRins_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        oldKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        newKey_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        socialRelationshipType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ernManagerFriendId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        connectorFriendId_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_EncryptedEskAndRins_descriptor;
      }

      @Override
      public EncryptedEskAndRins getDefaultInstanceForType() {
        return EncryptedEskAndRins.getDefaultInstance();
      }

      @Override
      public EncryptedEskAndRins build() {
        EncryptedEskAndRins result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public EncryptedEskAndRins buildPartial() {
        EncryptedEskAndRins result = new EncryptedEskAndRins(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ernId_ = ernId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.connectedRins_ = connectedRins_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.oldKey_ = oldKey_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          to_bitField0_ |= 0x00000008;
        }
        result.newKey_ = newKey_;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.socialRelationshipType_ = socialRelationshipType_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          to_bitField0_ |= 0x00000020;
        }
        result.ernManagerFriendId_ = ernManagerFriendId_;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          to_bitField0_ |= 0x00000040;
        }
        result.connectorFriendId_ = connectorFriendId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EncryptedEskAndRins) {
          return mergeFrom((EncryptedEskAndRins)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(EncryptedEskAndRins other) {
        if (other == EncryptedEskAndRins.getDefaultInstance()) return this;
        if (other.hasErnId()) {
          setErnId(other.getErnId());
        }
        if (other.hasConnectedRins()) {
          setConnectedRins(other.getConnectedRins());
        }
        if (other.hasOldKey()) {
          setOldKey(other.getOldKey());
        }
        if (other.hasNewKey()) {
          setNewKey(other.getNewKey());
        }
        if (other.hasSocialRelationshipType()) {
          setSocialRelationshipType(other.getSocialRelationshipType());
        }
        if (other.hasErnManagerFriendId()) {
          setErnManagerFriendId(other.getErnManagerFriendId());
        }
        if (other.hasConnectorFriendId()) {
          setConnectorFriendId(other.getConnectorFriendId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasErnId()) {
          return false;
        }
        if (!hasConnectedRins()) {
          return false;
        }
        if (!hasOldKey()) {
          return false;
        }
        if (!hasNewKey()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        EncryptedEskAndRins parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (EncryptedEskAndRins) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ernId_ ;
      /**
       * <code>required int32 ernId = 1;</code>
       * @return Whether the ernId field is set.
       */
      public boolean hasErnId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @return The ernId.
       */
      public int getErnId() {
        return ernId_;
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @param value The ernId to set.
       * @return This builder for chaining.
       */
      public Builder setErnId(int value) {
        bitField0_ |= 0x00000001;
        ernId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ernId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearErnId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ernId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString connectedRins_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes connectedRins = 2;</code>
       * @return Whether the connectedRins field is set.
       */
      public boolean hasConnectedRins() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required bytes connectedRins = 2;</code>
       * @return The connectedRins.
       */
      public com.google.protobuf.ByteString getConnectedRins() {
        return connectedRins_;
      }
      /**
       * <code>required bytes connectedRins = 2;</code>
       * @param value The connectedRins to set.
       * @return This builder for chaining.
       */
      public Builder setConnectedRins(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        connectedRins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes connectedRins = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnectedRins() {
        bitField0_ = (bitField0_ & ~0x00000002);
        connectedRins_ = getDefaultInstance().getConnectedRins();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString oldKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes oldKey = 3;</code>
       * @return Whether the oldKey field is set.
       */
      public boolean hasOldKey() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required bytes oldKey = 3;</code>
       * @return The oldKey.
       */
      public com.google.protobuf.ByteString getOldKey() {
        return oldKey_;
      }
      /**
       * <code>required bytes oldKey = 3;</code>
       * @param value The oldKey to set.
       * @return This builder for chaining.
       */
      public Builder setOldKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        oldKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes oldKey = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOldKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        oldKey_ = getDefaultInstance().getOldKey();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString newKey_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes newKey = 4;</code>
       * @return Whether the newKey field is set.
       */
      public boolean hasNewKey() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required bytes newKey = 4;</code>
       * @return The newKey.
       */
      public com.google.protobuf.ByteString getNewKey() {
        return newKey_;
      }
      /**
       * <code>required bytes newKey = 4;</code>
       * @param value The newKey to set.
       * @return This builder for chaining.
       */
      public Builder setNewKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        newKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes newKey = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewKey() {
        bitField0_ = (bitField0_ & ~0x00000008);
        newKey_ = getDefaultInstance().getNewKey();
        onChanged();
        return this;
      }

      private int socialRelationshipType_ ;
      /**
       * <pre>
       * SocialRelationship.TYPE_UNDEFINED
       * </pre>
       *
       * <code>optional int32 socialRelationshipType = 5 [default = 0];</code>
       * @return Whether the socialRelationshipType field is set.
       */
      public boolean hasSocialRelationshipType() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * SocialRelationship.TYPE_UNDEFINED
       * </pre>
       *
       * <code>optional int32 socialRelationshipType = 5 [default = 0];</code>
       * @return The socialRelationshipType.
       */
      public int getSocialRelationshipType() {
        return socialRelationshipType_;
      }
      /**
       * <pre>
       * SocialRelationship.TYPE_UNDEFINED
       * </pre>
       *
       * <code>optional int32 socialRelationshipType = 5 [default = 0];</code>
       * @param value The socialRelationshipType to set.
       * @return This builder for chaining.
       */
      public Builder setSocialRelationshipType(int value) {
        bitField0_ |= 0x00000010;
        socialRelationshipType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * SocialRelationship.TYPE_UNDEFINED
       * </pre>
       *
       * <code>optional int32 socialRelationshipType = 5 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearSocialRelationshipType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        socialRelationshipType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString ernManagerFriendId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes ernManagerFriendId = 6;</code>
       * @return Whether the ernManagerFriendId field is set.
       */
      public boolean hasErnManagerFriendId() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bytes ernManagerFriendId = 6;</code>
       * @return The ernManagerFriendId.
       */
      public com.google.protobuf.ByteString getErnManagerFriendId() {
        return ernManagerFriendId_;
      }
      /**
       * <code>optional bytes ernManagerFriendId = 6;</code>
       * @param value The ernManagerFriendId to set.
       * @return This builder for chaining.
       */
      public Builder setErnManagerFriendId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        ernManagerFriendId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes ernManagerFriendId = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearErnManagerFriendId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ernManagerFriendId_ = getDefaultInstance().getErnManagerFriendId();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString connectorFriendId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes connectorFriendId = 7;</code>
       * @return Whether the connectorFriendId field is set.
       */
      public boolean hasConnectorFriendId() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional bytes connectorFriendId = 7;</code>
       * @return The connectorFriendId.
       */
      public com.google.protobuf.ByteString getConnectorFriendId() {
        return connectorFriendId_;
      }
      /**
       * <code>optional bytes connectorFriendId = 7;</code>
       * @param value The connectorFriendId to set.
       * @return This builder for chaining.
       */
      public Builder setConnectorFriendId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        connectorFriendId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes connectorFriendId = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearConnectorFriendId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        connectorFriendId_ = getDefaultInstance().getConnectorFriendId();
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:EncryptedEskAndRins)
    }

    // @@protoc_insertion_point(class_scope:EncryptedEskAndRins)
    private static final EncryptedEskAndRins DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new EncryptedEskAndRins();
    }

    public static EncryptedEskAndRins getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<EncryptedEskAndRins>
        PARSER = new com.google.protobuf.AbstractParser<EncryptedEskAndRins>() {
      @Override
      public EncryptedEskAndRins parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EncryptedEskAndRins(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EncryptedEskAndRins> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<EncryptedEskAndRins> getParserForType() {
      return PARSER;
    }

    @Override
    public EncryptedEskAndRins getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NatTDelayTunerPacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NatTDelayTunerPacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 internetAddress = 1;</code>
     * @return Whether the internetAddress field is set.
     */
    boolean hasInternetAddress();
    /**
     * <code>required int32 internetAddress = 1;</code>
     * @return The internetAddress.
     */
    int getInternetAddress();

    /**
     * <code>required int64 sentTime = 2;</code>
     * @return Whether the sentTime field is set.
     */
    boolean hasSentTime();
    /**
     * <code>required int64 sentTime = 2;</code>
     * @return The sentTime.
     */
    long getSentTime();

    /**
     * <code>required bool replied = 3 [default = false];</code>
     * @return Whether the replied field is set.
     */
    boolean hasReplied();
    /**
     * <code>required bool replied = 3 [default = false];</code>
     * @return The replied.
     */
    boolean getReplied();
  }
  /**
   * <pre>
   * packet id 9
   * </pre>
   *
   * Protobuf type {@code NatTDelayTunerPacket}
   */
  public  static final class NatTDelayTunerPacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NatTDelayTunerPacket)
      NatTDelayTunerPacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NatTDelayTunerPacket.newBuilder() to construct.
    private NatTDelayTunerPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NatTDelayTunerPacket() {
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new NatTDelayTunerPacket();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NatTDelayTunerPacket(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              internetAddress_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sentTime_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              replied_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return RampPacketsProtos.internal_static_NatTDelayTunerPacket_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return RampPacketsProtos.internal_static_NatTDelayTunerPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NatTDelayTunerPacket.class, Builder.class);
    }

    private int bitField0_;
    public static final int INTERNETADDRESS_FIELD_NUMBER = 1;
    private int internetAddress_;
    /**
     * <code>required int32 internetAddress = 1;</code>
     * @return Whether the internetAddress field is set.
     */
    public boolean hasInternetAddress() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int32 internetAddress = 1;</code>
     * @return The internetAddress.
     */
    public int getInternetAddress() {
      return internetAddress_;
    }

    public static final int SENTTIME_FIELD_NUMBER = 2;
    private long sentTime_;
    /**
     * <code>required int64 sentTime = 2;</code>
     * @return Whether the sentTime field is set.
     */
    public boolean hasSentTime() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required int64 sentTime = 2;</code>
     * @return The sentTime.
     */
    public long getSentTime() {
      return sentTime_;
    }

    public static final int REPLIED_FIELD_NUMBER = 3;
    private boolean replied_;
    /**
     * <code>required bool replied = 3 [default = false];</code>
     * @return Whether the replied field is set.
     */
    public boolean hasReplied() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required bool replied = 3 [default = false];</code>
     * @return The replied.
     */
    public boolean getReplied() {
      return replied_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasInternetAddress()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSentTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReplied()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, internetAddress_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, sentTime_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, replied_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, internetAddress_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, sentTime_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, replied_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NatTDelayTunerPacket)) {
        return super.equals(obj);
      }
      NatTDelayTunerPacket other = (NatTDelayTunerPacket) obj;

      if (hasInternetAddress() != other.hasInternetAddress()) return false;
      if (hasInternetAddress()) {
        if (getInternetAddress()
            != other.getInternetAddress()) return false;
      }
      if (hasSentTime() != other.hasSentTime()) return false;
      if (hasSentTime()) {
        if (getSentTime()
            != other.getSentTime()) return false;
      }
      if (hasReplied() != other.hasReplied()) return false;
      if (hasReplied()) {
        if (getReplied()
            != other.getReplied()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInternetAddress()) {
        hash = (37 * hash) + INTERNETADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getInternetAddress();
      }
      if (hasSentTime()) {
        hash = (37 * hash) + SENTTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSentTime());
      }
      if (hasReplied()) {
        hash = (37 * hash) + REPLIED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getReplied());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NatTDelayTunerPacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NatTDelayTunerPacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NatTDelayTunerPacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NatTDelayTunerPacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NatTDelayTunerPacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NatTDelayTunerPacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NatTDelayTunerPacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NatTDelayTunerPacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NatTDelayTunerPacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NatTDelayTunerPacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NatTDelayTunerPacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NatTDelayTunerPacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NatTDelayTunerPacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * packet id 9
     * </pre>
     *
     * Protobuf type {@code NatTDelayTunerPacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NatTDelayTunerPacket)
        NatTDelayTunerPacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return RampPacketsProtos.internal_static_NatTDelayTunerPacket_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return RampPacketsProtos.internal_static_NatTDelayTunerPacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NatTDelayTunerPacket.class, Builder.class);
      }

      // Construct using it.unibo.deis.lia.ramp.core.e2e.RampPacketsProtos.NatTDelayTunerPacket.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        internetAddress_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sentTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        replied_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return RampPacketsProtos.internal_static_NatTDelayTunerPacket_descriptor;
      }

      @Override
      public NatTDelayTunerPacket getDefaultInstanceForType() {
        return NatTDelayTunerPacket.getDefaultInstance();
      }

      @Override
      public NatTDelayTunerPacket build() {
        NatTDelayTunerPacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public NatTDelayTunerPacket buildPartial() {
        NatTDelayTunerPacket result = new NatTDelayTunerPacket(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.internetAddress_ = internetAddress_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.sentTime_ = sentTime_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.replied_ = replied_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NatTDelayTunerPacket) {
          return mergeFrom((NatTDelayTunerPacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NatTDelayTunerPacket other) {
        if (other == NatTDelayTunerPacket.getDefaultInstance()) return this;
        if (other.hasInternetAddress()) {
          setInternetAddress(other.getInternetAddress());
        }
        if (other.hasSentTime()) {
          setSentTime(other.getSentTime());
        }
        if (other.hasReplied()) {
          setReplied(other.getReplied());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        if (!hasInternetAddress()) {
          return false;
        }
        if (!hasSentTime()) {
          return false;
        }
        if (!hasReplied()) {
          return false;
        }
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NatTDelayTunerPacket parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NatTDelayTunerPacket) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int internetAddress_ ;
      /**
       * <code>required int32 internetAddress = 1;</code>
       * @return Whether the internetAddress field is set.
       */
      public boolean hasInternetAddress() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required int32 internetAddress = 1;</code>
       * @return The internetAddress.
       */
      public int getInternetAddress() {
        return internetAddress_;
      }
      /**
       * <code>required int32 internetAddress = 1;</code>
       * @param value The internetAddress to set.
       * @return This builder for chaining.
       */
      public Builder setInternetAddress(int value) {
        bitField0_ |= 0x00000001;
        internetAddress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 internetAddress = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearInternetAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internetAddress_ = 0;
        onChanged();
        return this;
      }

      private long sentTime_ ;
      /**
       * <code>required int64 sentTime = 2;</code>
       * @return Whether the sentTime field is set.
       */
      public boolean hasSentTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required int64 sentTime = 2;</code>
       * @return The sentTime.
       */
      public long getSentTime() {
        return sentTime_;
      }
      /**
       * <code>required int64 sentTime = 2;</code>
       * @param value The sentTime to set.
       * @return This builder for chaining.
       */
      public Builder setSentTime(long value) {
        bitField0_ |= 0x00000002;
        sentTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 sentTime = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSentTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sentTime_ = 0L;
        onChanged();
        return this;
      }

      private boolean replied_ ;
      /**
       * <code>required bool replied = 3 [default = false];</code>
       * @return Whether the replied field is set.
       */
      public boolean hasReplied() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required bool replied = 3 [default = false];</code>
       * @return The replied.
       */
      public boolean getReplied() {
        return replied_;
      }
      /**
       * <code>required bool replied = 3 [default = false];</code>
       * @param value The replied to set.
       * @return This builder for chaining.
       */
      public Builder setReplied(boolean value) {
        bitField0_ |= 0x00000004;
        replied_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool replied = 3 [default = false];</code>
       * @return This builder for chaining.
       */
      public Builder clearReplied() {
        bitField0_ = (bitField0_ & ~0x00000004);
        replied_ = false;
        onChanged();
        return this;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NatTDelayTunerPacket)
    }

    // @@protoc_insertion_point(class_scope:NatTDelayTunerPacket)
    private static final NatTDelayTunerPacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NatTDelayTunerPacket();
    }

    public static NatTDelayTunerPacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<NatTDelayTunerPacket>
        PARSER = new com.google.protobuf.AbstractParser<NatTDelayTunerPacket>() {
      @Override
      public NatTDelayTunerPacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NatTDelayTunerPacket(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NatTDelayTunerPacket> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<NatTDelayTunerPacket> getParserForType() {
      return PARSER;
    }

    @Override
    public NatTDelayTunerPacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HeartbeatRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HeartbeatRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_HeartbeatResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_HeartbeatResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UnicastHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UnicastHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_UnicastPacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_UnicastPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BroadcastPacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BroadcastPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EncryptedPacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EncryptedPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SignedPacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SignedPacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EncryptedEskAndRins_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EncryptedEskAndRins_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NatTDelayTunerPacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NatTDelayTunerPacket_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\021ramppackets.proto\"\"\n\020HeartbeatRequest\022" +
      "\016\n\006nodeId\030\001 \002(\005\"#\n\021HeartbeatResponse\022\016\n\006" +
      "nodeId\030\001 \002(\005\"\262\002\n\rUnicastHeader\022\n\n\002id\030\001 \002" +
      "(\005\022\014\n\004dest\030\002 \003(\005\022\016\n\006source\030\003 \003(\005\022\020\n\010dest" +
      "Port\030\004 \002(\005\022\025\n\ndestNodeId\030\005 \001(\005:\0010\022\027\n\014sou" +
      "rceNodeId\030\006 \001(\005:\0010\022\013\n\003ack\030\007 \002(\010\022\025\n\rsourc" +
      "ePortAck\030\010 \001(\005\022\022\n\ncurrentHop\030\t \002(\005\022\022\n\nbu" +
      "fferSize\030\n \002(\005\022\r\n\005retry\030\013 \002(\005\022\020\n\010timeWai" +
      "t\030\014 \001(\005\022\016\n\006expiry\030\r \001(\005\022\026\n\016connectTimeou" +
      "t\030\016 \002(\005\022\016\n\006flowId\030\017 \001(\005\022\020\n\010dataType\030\020 \001(" +
      "\003\"\300\002\n\rUnicastPacket\022\n\n\002id\030\001 \002(\005\022\014\n\004dest\030" +
      "\002 \003(\005\022\016\n\006source\030\003 \003(\005\022\020\n\010destPort\030\004 \002(\005\022" +
      "\022\n\ndestNodeId\030\005 \001(\005\022\024\n\014sourceNodeId\030\006 \001(" +
      "\005\022\013\n\003ack\030\007 \002(\010\022\025\n\rsourcePortAck\030\010 \001(\005\022\022\n" +
      "\ncurrentHop\030\t \002(\005\022\022\n\nbufferSize\030\n \002(\005\022\020\n" +
      "\005retry\030\013 \002(\005:\0010\022\020\n\010timeWait\030\014 \001(\005\022\016\n\006exp" +
      "iry\030\r \001(\005\022\026\n\016connectTimeout\030\016 \002(\005\022\016\n\006flo" +
      "wId\030\017 \001(\005\022\020\n\010dataType\030\020 \001(\003\022\017\n\007payload\030c" +
      " \002(\014\"\253\001\n\017BroadcastPacket\022\n\n\002id\030\001 \002(\005\022\016\n\006" +
      "source\030\002 \003(\005\022\024\n\014traversedIds\030\003 \003(\005\022\024\n\014so" +
      "urceNodeId\030\004 \001(\005\022\013\n\003ttl\030\005 \002(\005\022\020\n\010destPor" +
      "t\030\006 \002(\005\022\016\n\006expiry\030\007 \001(\005\022\020\n\010dataType\030\010 \001(" +
      "\003\022\017\n\007payload\030c \002(\014\"a\n\017EncryptedPacket\022\r\n" +
      "\005ernId\030\001 \002(\005\022\r\n\005eskId\030\002 \002(\005\022\030\n\020encrypted" +
      "Payload\030\003 \002(\014\022\026\n\016encryptedBytes\030\004 \002(\005\"e\n" +
      "\014SignedPacket\022\r\n\005ernId\030\001 \002(\005\022\r\n\005eskId\030\002 " +
      "\002(\005\022\017\n\007payload\030\003 \002(\014\022\021\n\tsignature\030\004 \002(\014\022" +
      "\023\n\013signedBytes\030\005 \002(\005\"\265\001\n\023EncryptedEskAnd" +
      "Rins\022\r\n\005ernId\030\001 \002(\005\022\025\n\rconnectedRins\030\002 \002" +
      "(\014\022\016\n\006oldKey\030\003 \002(\014\022\016\n\006newKey\030\004 \002(\014\022!\n\026so" +
      "cialRelationshipType\030\005 \001(\005:\0010\022\032\n\022ernMana" +
      "gerFriendId\030\006 \001(\014\022\031\n\021connectorFriendId\030\007" +
      " \001(\014\"Y\n\024NatTDelayTunerPacket\022\027\n\017internet" +
      "Address\030\001 \002(\005\022\020\n\010sentTime\030\002 \002(\003\022\026\n\007repli" +
      "ed\030\003 \002(\010:\005falseB4\n\037it.unibo.deis.lia.ram" +
      "p.core.e2eB\021RampPacketsProtos"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_HeartbeatRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_HeartbeatRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HeartbeatRequest_descriptor,
        new String[] { "NodeId", });
    internal_static_HeartbeatResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_HeartbeatResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_HeartbeatResponse_descriptor,
        new String[] { "NodeId", });
    internal_static_UnicastHeader_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_UnicastHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UnicastHeader_descriptor,
        new String[] { "Id", "Dest", "Source", "DestPort", "DestNodeId", "SourceNodeId", "Ack", "SourcePortAck", "CurrentHop", "BufferSize", "Retry", "TimeWait", "Expiry", "ConnectTimeout", "FlowId", "DataType", });
    internal_static_UnicastPacket_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_UnicastPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_UnicastPacket_descriptor,
        new String[] { "Id", "Dest", "Source", "DestPort", "DestNodeId", "SourceNodeId", "Ack", "SourcePortAck", "CurrentHop", "BufferSize", "Retry", "TimeWait", "Expiry", "ConnectTimeout", "FlowId", "DataType", "Payload", });
    internal_static_BroadcastPacket_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_BroadcastPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BroadcastPacket_descriptor,
        new String[] { "Id", "Source", "TraversedIds", "SourceNodeId", "Ttl", "DestPort", "Expiry", "DataType", "Payload", });
    internal_static_EncryptedPacket_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_EncryptedPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EncryptedPacket_descriptor,
        new String[] { "ErnId", "EskId", "EncryptedPayload", "EncryptedBytes", });
    internal_static_SignedPacket_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_SignedPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SignedPacket_descriptor,
        new String[] { "ErnId", "EskId", "Payload", "Signature", "SignedBytes", });
    internal_static_EncryptedEskAndRins_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_EncryptedEskAndRins_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EncryptedEskAndRins_descriptor,
        new String[] { "ErnId", "ConnectedRins", "OldKey", "NewKey", "SocialRelationshipType", "ErnManagerFriendId", "ConnectorFriendId", });
    internal_static_NatTDelayTunerPacket_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_NatTDelayTunerPacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NatTDelayTunerPacket_descriptor,
        new String[] { "InternetAddress", "SentTime", "Replied", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
