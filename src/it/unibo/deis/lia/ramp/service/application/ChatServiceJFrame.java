/*
 * ChatServiceJFrame.java
 *
 * Created on 28 aprile 2010, 17.24
 */

package it.unibo.deis.lia.ramp.service.application;

import it.unibo.deis.lia.ramp.core.internode.*;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * 
 */
public class ChatServiceJFrame extends javax.swing.JFrame implements ChatInterface{
    
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private ChatServiceOld cs;
    private String[] contacts; 
    
    /** Creates new form ChatServiceJFrame */
    public ChatServiceJFrame(ChatServiceOld cs) {
        this.cs=cs;
        initComponents();
        new SendStatus(this).start();
        setVisible(true);
        
        cs.loadContacts();
        contacts=cs.getContacts();
        Resolver resolver=Resolver.getInstance(false);
        DefaultComboBoxModel dcm = new DefaultComboBoxModel(contacts);
        jComboBoxContacts.setModel(dcm);
        for(int count=0;count<contacts.length;count++)
        {   
            System.out.println("Verifico stato del contatto: "+contacts[count]);
            Vector<ResolverPath> destinationAddr=resolver.resolveBlocking(contacts[count].hashCode(),1000);
            if(destinationAddr==null)
              contacts[count]=contacts[count]+": OFFLINE";
              //jTextAreaContacts.append(contacts[count]+": OFFLINE"+"\n");
            else    
              contacts[count]=contacts[count]+": ONLINE";
              jTextAreaContacts.append(contacts[count]+"\n");
              //jTextAreaContacts.append(contacts[count]+": ONLINE"+"\n");
            
        }             
    }
    
    @Override
    public void visible(boolean visible){
    	setVisible(visible);
    }

    @Override
    public void setStatus(int sourceNodeId, String status){//per settare lo stato accanto a un contatto
        
        jTextAreaContacts.setText("");
        for(int count=0;count<contacts.length;count++)
        {
          if(contacts[count].startsWith(i2s(sourceNodeId)))
              contacts[count]=sourceNodeId+": "+status;
          jTextAreaContacts.append(contacts[count]+"\n");
        }
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaContacts = new javax.swing.JTextArea();
        jButtonStartChat = new javax.swing.JButton();
        jTextFieldStatus = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxContacts = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ChatService");
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Contacts"));

        jTextAreaContacts.setColumns(20);
        jTextAreaContacts.setEditable(false);
        jTextAreaContacts.setRows(5);
        jScrollPane1.setViewportView(jTextAreaContacts);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
        );

        jButtonStartChat.setText("StartChat");
        jButtonStartChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartChatActionPerformed(evt);
            }
        });

        jTextFieldStatus.setText("ONLINE");

        jLabel1.setText("Current Status:");

        jComboBoxContacts.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Send Status");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jTextFieldStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(49, 49, 49)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxContacts, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonStartChat, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(24, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(42, 42, 42))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jComboBoxContacts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jButtonStartChat)
                .addGap(87, 87, 87)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void jButtonStartChatActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        
        String contact=jComboBoxContacts.getSelectedItem().toString();
        try {
            cs.startCommunication(contact.hashCode());
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }                                                

    private void formWindowClosing(java.awt.event.WindowEvent evt) {                                   
        System.out.println("ChatServiceJFrame: formWindowClosing");
        cs.stopService();
    }                                  

    private void formWindowClosed(java.awt.event.WindowEvent evt) {                                  
		// 
    }                                 

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {
    	cs.setMyStatus(jTextFieldStatus.getText());
    }
    
    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonStartChat;
    private javax.swing.JComboBox jComboBoxContacts;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaContacts;
    private javax.swing.JTextField jTextFieldStatus;
    // End of variables declaration

    private class SendStatus extends Thread{
    private ChatServiceJFrame csjf;
    private SendStatus(ChatServiceJFrame csjf){
        this.csjf=csjf;
    }
    @Override
    public void run(){
        System.out.println("SendStatus Thread avviato");
        while(ChatServiceOld.isActive()){
            cs.setMyStatus(csjf.jTextFieldStatus.getText());
            try{
                
                sleep(1800000);
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    }
}
    
    private String i2s(int ipI){
    	//System.out.println("UnicastHeader.i2s: ipI="+ipI);
    	String ipS = "";
    	ipS += ( ( ipI >> 24 ) & 0xFF );
    	//System.out.println("UnicastHeader.i2s: ipS="+ipS);
    	ipS += ".";
    	ipS += ( ( ipI >> 16 ) & 0xFF );
    	//System.out.println("UnicastHeader.i2s: ipS="+ipS);
    	ipS += ".";
    	ipS += ( ( ipI >> 8 ) & 0xFF );
    	//System.out.println("UnicastHeader.i2s: ipS="+ipS); 
    	ipS += ".";
    	ipS += ( ( ipI >> 0 ) & 0xFF );
    	//System.out.println("UnicastHeader.i2s: ipS="+ipS);
    	return ipS;
    }
}
