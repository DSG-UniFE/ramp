/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FileSharingServerJFrame.java
 *
 * Created on 7-nov-2009, 11.00.19
 */

package it.unibo.deis.lia.ramp.service.application;

/**
 *
 * @author useruser
 */
public class FileSharingServiceJFrame extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private FileSharingService fss;
    /** Creates new form FileSharingServerJFrame */
    public FileSharingServiceJFrame(FileSharingService fss) {
        this.fss=fss;
        initComponents();

        jTextFieldCurrentDirectory.setText(fss.getSharedDirectory());
        jButtonRefreshFileListActionPerformed(null);
        jTextFieldNewBufferSize.setText(""+fss.getBufferSize());
        jTextFieldCurrentBufferSize.setText(""+fss.getBufferSize());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldCurrentDirectory = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNewDirectory = new javax.swing.JTextField();
        jButtonChangeDirectory = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaFileList = new javax.swing.JTextArea();
        jButtonRefreshFileList = new javax.swing.JButton();
        jButtonBufferSize = new javax.swing.JButton();
        jTextFieldNewBufferSize = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jCheckBoxBestBufferSize = new javax.swing.JCheckBox();
        jTextFieldCurrentBufferSize = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FileSharingService");
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("current shared directory");

        jTextFieldCurrentDirectory.setEditable(false);

        jLabel2.setText("new shared directory");

        jButtonChangeDirectory.setText("change directory");
        jButtonChangeDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeDirectoryActionPerformed(evt);
            }
        });

        jTextAreaFileList.setColumns(20);
        jTextAreaFileList.setEditable(false);
        jTextAreaFileList.setRows(5);
        jScrollPane1.setViewportView(jTextAreaFileList);

        jButtonRefreshFileList.setText("refresh file list");
        jButtonRefreshFileList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshFileListActionPerformed(evt);
            }
        });

        jButtonBufferSize.setText("set bufferSize (byte)");
        jButtonBufferSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBufferSizeActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setText("(0 default, -1 disabled)");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jCheckBoxBestBufferSize.setText("best bufferSize");
        jCheckBoxBestBufferSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBestBufferSizeActionPerformed(evt);
            }
        });

        jTextFieldCurrentBufferSize.setEditable(false);
        jTextFieldCurrentBufferSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCurrentBufferSizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCurrentDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldNewDirectory, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextFieldCurrentBufferSize, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBufferSize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNewBufferSize, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxBestBufferSize))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonChangeDirectory)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRefreshFileList))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCurrentDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldNewDirectory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonChangeDirectory)
                    .addComponent(jButtonRefreshFileList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxBestBufferSize)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNewBufferSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBufferSize)
                    .addComponent(jTextFieldCurrentBufferSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonChangeDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeDirectoryActionPerformed
        String newDirectory=jTextFieldNewDirectory.getText();
        if(new java.io.File(newDirectory).isDirectory()){
            fss.setSharedDirectory(newDirectory);

            jTextFieldCurrentDirectory.setText(fss.getSharedDirectory());
            jButtonRefreshFileListActionPerformed(null);
        }
        else{
            System.out.println("FileSharingServiceJFrame: invalid new dirctory "+newDirectory);
        }
    }//GEN-LAST:event_jButtonChangeDirectoryActionPerformed

    private void jButtonRefreshFileListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshFileListActionPerformed
        System.out.println("FileSharingServiceJFrame: jButtonRefreshFileListActionPerformed");
        String[] files=fss.getFileList();
        String text="";
        for(int i=0; i<files.length; i++){
            text+=files[i]+"\n";
        }
        jTextAreaFileList.setText(text);
    }//GEN-LAST:event_jButtonRefreshFileListActionPerformed

    private void jButtonBufferSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBufferSizeActionPerformed
        System.out.println("FileSharingServiceJFrame: jButtonBufferSizeActionPerformed "+jTextFieldNewBufferSize.getText());
        int bufferSize = Integer.parseInt(jTextFieldNewBufferSize.getText());
        fss.setBufferSize(bufferSize);
        jTextFieldCurrentBufferSize.setText(""+fss.getBufferSize());
    }//GEN-LAST:event_jButtonBufferSizeActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // do nothing
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        System.out.println("FileSharingServiceJFrame: formWindowClosing");
        fss.stopService();
    }//GEN-LAST:event_formWindowClosing

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // do nothing
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jCheckBoxBestBufferSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBestBufferSizeActionPerformed
        boolean isSelected = this.jCheckBoxBestBufferSize.isSelected();
        if(isSelected){
            this.jButtonBufferSize.setEnabled(false);
            this.jTextFieldNewBufferSize.setEnabled(false);
            fss.setBestBufferSize(true);
            jTextFieldCurrentBufferSize.setText("best buffer size");
        }
        else{
            this.jButtonBufferSize.setEnabled(true);
            this.jTextFieldNewBufferSize.setEnabled(true);
            fss.setBestBufferSize(false);
            jTextFieldCurrentBufferSize.setText(""+fss.getBufferSize());
        }
    }//GEN-LAST:event_jCheckBoxBestBufferSizeActionPerformed

    private void jTextFieldCurrentBufferSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCurrentBufferSizeActionPerformed
        // do nothing
    }//GEN-LAST:event_jTextFieldCurrentBufferSizeActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBufferSize;
    private javax.swing.JButton jButtonChangeDirectory;
    private javax.swing.JButton jButtonRefreshFileList;
    private javax.swing.JCheckBox jCheckBoxBestBufferSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaFileList;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldCurrentBufferSize;
    private javax.swing.JTextField jTextFieldCurrentDirectory;
    private javax.swing.JTextField jTextFieldNewBufferSize;
    private javax.swing.JTextField jTextFieldNewDirectory;
    // End of variables declaration//GEN-END:variables

}
